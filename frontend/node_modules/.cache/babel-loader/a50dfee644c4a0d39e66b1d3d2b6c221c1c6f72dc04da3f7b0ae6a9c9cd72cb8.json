{"ast":null,"code":"import _objectSpread from\"C:/Users/bruno/OneDrive/\\xC1rea de Trabalho/InvestMoneyBots/Crm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const{makeRequest,user}=useAuth();const[periodo,setPeriodo]=useState('total');// total, semanal, mensal\nconst[subPeriodo,setSubPeriodo]=useState(null);// para dias da semana\nconst[semanaOpcao,setSemanaOpcao]=useState('atual');// atual, proxima\nconst[mesAno,setMesAno]=useState(new Date());// para navegação mensal\nconst[filtroRegiao,setFiltroRegiao]=useState({cidade:'',estado:''});const[cidadesDisponiveis,setCidadesDisponiveis]=useState([]);const[estadosDisponiveis,setEstadosDisponiveis]=useState([]);const[stats,setStats]=useState({totalPacientes:0,totalAgendamentos:0,totalFechamentos:0,valorTotalFechamentos:0,agendamentosHoje:0,leadsPorStatus:{},fechamentosPorMes:[],consultoresStats:[],comissaoTotalMes:0,comissaoTotalGeral:0,// Novas estatísticas por período\nagendamentosPeriodo:0,fechamentosPeriodo:0,valorPeriodo:0,novosLeadsPeriodo:0,// Estatísticas por dia da semana\nestatisticasPorDia:{}});const[loading,setLoading]=useState(true);useEffect(()=>{fetchStats();fetchRegioesDisponiveis();},[periodo,subPeriodo,mesAno,semanaOpcao,filtroRegiao]);// Buscar cidades quando estado for alterado\nuseEffect(()=>{const fetchCidades=async()=>{try{if(filtroRegiao.estado){const cidadesRes=await makeRequest(\"/clinicas/cidades?estado=\".concat(filtroRegiao.estado));if(cidadesRes.ok){const cidades=await cidadesRes.json();setCidadesDisponiveis(cidades);}}else{const cidadesRes=await makeRequest('/clinicas/cidades');if(cidadesRes.ok){const cidades=await cidadesRes.json();setCidadesDisponiveis(cidades);}}}catch(error){console.error('Erro ao carregar cidades:',error);}};fetchCidades();},[filtroRegiao.estado]);const calcularComissao=valorFechado=>{return valorFechado/1000*5;};const fetchStats=async()=>{try{// Construir parâmetros de busca para clínicas\nconst clinicasParams=new URLSearchParams();if(filtroRegiao.estado)clinicasParams.append('estado',filtroRegiao.estado);if(filtroRegiao.cidade)clinicasParams.append('cidade',filtroRegiao.cidade);const[pacientesRes,agendamentosRes,fechamentosRes,consultoresRes,clinicasRes]=await Promise.all([makeRequest('/pacientes'),makeRequest('/agendamentos'),makeRequest('/fechamentos'),makeRequest('/consultores'),makeRequest(\"/clinicas?\".concat(clinicasParams.toString()))]);const pacientes=await pacientesRes.json();let agendamentos=await agendamentosRes.json();let fechamentos=await fechamentosRes.json();const consultores=await consultoresRes.json();const clinicasFiltradas=await clinicasRes.json();// Aplicar filtros por região se especificados\nif(filtroRegiao.cidade||filtroRegiao.estado){const clinicasIds=clinicasFiltradas.map(c=>c.id);// Filtrar agendamentos por região (via clínicas)\nagendamentos=agendamentos.filter(agendamento=>{if(!agendamento.clinica_id)return false;// excluir agendamentos sem clínica quando há filtro\nreturn clinicasIds.includes(agendamento.clinica_id);});// Filtrar fechamentos por região (via clínicas)\nfechamentos=fechamentos.filter(fechamento=>{if(!fechamento.clinica_id)return false;// excluir fechamentos sem clínica quando há filtro\nreturn clinicasIds.includes(fechamento.clinica_id);});}const hoje=new Date();const hojeStr=hoje.toISOString().split('T')[0];const agendamentosHoje=agendamentos.filter(a=>a.data_agendamento===hojeStr).length;const leadsPorStatus=pacientes.reduce((acc,p)=>{acc[p.status]=(acc[p.status]||0)+1;return acc;},{});const valorTotal=fechamentos.reduce((sum,f)=>sum+parseFloat(f.valor_fechado||0),0);// Calcular data de início e fim baseado no período selecionado\nlet dataInicio=null;let dataFim=null;if(periodo==='total'){// Sem filtro de data para total\ndataInicio=null;dataFim=null;}else if(periodo==='semanal'){if(subPeriodo){// Dia específico da semana\ndataInicio=new Date(subPeriodo);dataInicio.setHours(0,0,0,0);dataFim=new Date(subPeriodo);dataFim.setHours(23,59,59,999);}else{// Semana atual ou próxima\ndataInicio=new Date(hoje);if(semanaOpcao==='proxima'){// Próxima semana\ndataInicio.setDate(hoje.getDate()+7-hoje.getDay());// Próximo domingo\n}else{// Semana atual\ndataInicio.setDate(hoje.getDate()-hoje.getDay());// Domingo atual\n}dataInicio.setHours(0,0,0,0);dataFim=new Date(dataInicio);dataFim.setDate(dataInicio.getDate()+6);// Sábado\ndataFim.setHours(23,59,59,999);}}else if(periodo==='mensal'){// Mês selecionado\ndataInicio=new Date(mesAno.getFullYear(),mesAno.getMonth(),1);dataFim=new Date(mesAno.getFullYear(),mesAno.getMonth()+1,0);dataFim.setHours(23,59,59,999);}// Filtrar dados por período\nconst agendamentosPeriodo=dataInicio?agendamentos.filter(a=>{const data=new Date(a.data_agendamento);return data>=dataInicio&&data<=dataFim;}).length:agendamentos.length;const fechamentosPeriodo=dataInicio?fechamentos.filter(f=>{const data=new Date(f.data_fechamento);return data>=dataInicio&&data<=dataFim;}):fechamentos;const valorPeriodo=fechamentosPeriodo.reduce((sum,f)=>sum+parseFloat(f.valor_fechado||0),0);const novosLeadsPeriodo=dataInicio?pacientes.filter(p=>{const data=new Date(p.created_at);return data>=dataInicio&&data<=dataFim;}).length:pacientes.length;// Calcular estatísticas por dia da semana (apenas para visualização semanal)\nlet estatisticasPorDia={};if(periodo==='semanal'&&!subPeriodo){const diasSemana=['Dom','Seg','Ter','Qua','Qui','Sex','Sáb'];for(let i=0;i<7;i++){const diaData=new Date(dataInicio);diaData.setDate(dataInicio.getDate()+i);const diaStr=diaData.toISOString().split('T')[0];estatisticasPorDia[diasSemana[i]]={data:diaData,agendamentos:agendamentos.filter(a=>a.data_agendamento===diaStr).length,fechamentos:fechamentos.filter(f=>f.data_fechamento===diaStr).length,valor:fechamentos.filter(f=>f.data_fechamento===diaStr).reduce((sum,f)=>sum+parseFloat(f.valor_fechado||0),0)};}}// Calcular comissões\nconst mesAtual=new Date().getMonth();const anoAtual=new Date().getFullYear();let comissaoTotalMes=0;let comissaoTotalGeral=0;// Inicializar mapa de consultores com TODOS os consultores\nconst consultoresMap={};consultores.forEach(c=>{consultoresMap[c.nome]={nome:c.nome,totalPacientes:0,totalAgendamentos:0,totalFechamentos:0,valorFechado:0,valorFechadoMes:0,comissaoTotal:0,comissaoMes:0};});// Atualizar estatísticas dos consultores\npacientes.forEach(p=>{if(p.consultor_nome&&consultoresMap[p.consultor_nome]){consultoresMap[p.consultor_nome].totalPacientes++;}});agendamentos.forEach(a=>{if(a.consultor_nome&&consultoresMap[a.consultor_nome]){consultoresMap[a.consultor_nome].totalAgendamentos++;}});fechamentos.forEach(f=>{if(f.consultor_nome&&consultoresMap[f.consultor_nome]){const valor=parseFloat(f.valor_fechado||0);consultoresMap[f.consultor_nome].totalFechamentos++;consultoresMap[f.consultor_nome].valorFechado+=valor;const comissao=calcularComissao(valor);consultoresMap[f.consultor_nome].comissaoTotal+=comissao;comissaoTotalGeral+=comissao;// Verificar se é do mês atual\nconst dataFechamento=new Date(f.data_fechamento);if(dataFechamento.getMonth()===mesAtual&&dataFechamento.getFullYear()===anoAtual){consultoresMap[f.consultor_nome].valorFechadoMes+=valor;consultoresMap[f.consultor_nome].comissaoMes+=comissao;comissaoTotalMes+=comissao;}}});const consultoresStats=Object.values(consultoresMap);setStats({totalPacientes:pacientes.length,totalAgendamentos:agendamentos.length,totalFechamentos:fechamentos.length,valorTotalFechamentos:valorTotal,agendamentosHoje,leadsPorStatus,consultoresStats,comissaoTotalMes,comissaoTotalGeral,agendamentosPeriodo,fechamentosPeriodo:fechamentosPeriodo.length,valorPeriodo,novosLeadsPeriodo,estatisticasPorDia});setLoading(false);}catch(error){console.error('Erro ao carregar estatísticas:',error);setLoading(false);}};const fetchRegioesDisponiveis=async()=>{try{const estadosRes=await makeRequest('/clinicas/estados');if(estadosRes.ok){const estados=await estadosRes.json();setEstadosDisponiveis(estados);}}catch(error){console.error('Erro ao carregar estados:',error);}};const formatCurrency=value=>{return value.toLocaleString('pt-BR',{style:'currency',currency:'BRL'});};const formatCurrencyCompact=value=>{if(value>=1000000){return\"R$ \".concat((value/1000000).toFixed(1).replace('.',','),\"M\");}else if(value>=1000){return\"R$ \".concat((value/1000).toFixed(0),\"k\");}else{return value.toLocaleString('pt-BR',{style:'currency',currency:'BRL'});}};const formatarMesAno=data=>{const meses=['Janeiro','Fevereiro','Março','Abril','Maio','Junho','Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'];return\"\".concat(meses[data.getMonth()],\" \").concat(data.getFullYear());};const navegarMes=direcao=>{const novoMes=new Date(mesAno);novoMes.setMonth(mesAno.getMonth()+direcao);setMesAno(novoMes);};const diasSemana=['Dom','Seg','Ter','Qua','Qui','Sex','Sáb'];const obterPeriodoTexto=()=>{let textoBase='';if(periodo==='total'){textoBase='Todos os dados';}else if(periodo==='semanal'){if(subPeriodo){const data=new Date(subPeriodo);textoBase=\"\".concat(diasSemana[data.getDay()],\", \").concat(data.toLocaleDateString('pt-BR'));}else{textoBase=semanaOpcao==='proxima'?'Próxima semana':'Semana atual';}}else if(periodo==='mensal'){textoBase=formatarMesAno(mesAno);}// Adicionar informação de filtro regional\nconst filtrosRegiao=[];if(filtroRegiao.estado)filtrosRegiao.push(\"\".concat(filtroRegiao.estado));if(filtroRegiao.cidade)filtrosRegiao.push(\"\".concat(filtroRegiao.cidade));if(filtrosRegiao.length>0){textoBase+=\" - \".concat(filtrosRegiao.join(', '));}return textoBase;};const getStatusColor=status=>{const colors={lead:'#f59e0b',agendado:'#3b82f6',compareceu:'#10b981',fechado:'#059669',nao_fechou:'#ef4444',nao_compareceu:'#f87171',reagendado:'#8b5cf6'};return colors[status]||'#6b7280';};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Dashboard\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"page-subtitle\",children:[\"Bem-vindo, \",user===null||user===void 0?void 0:user.nome,(filtroRegiao.cidade||filtroRegiao.estado)&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'1rem',padding:'0.25rem 0.5rem',backgroundColor:'#dbeafe',color:'#1e40af',borderRadius:'12px',fontSize:'0.75rem',fontWeight:'500'},children:\"\\uD83D\\uDCCD Filtrado por regi\\xE3o\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'2rem',padding:'1rem',backgroundColor:'white',borderRadius:'8px',boxShadow:'0 1px 3px rgba(0, 0, 0, 0.1)'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'1rem',alignItems:'center',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'600',color:'#374151'},children:\"Visualizar por:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setPeriodo('total');setSubPeriodo(null);},className:\"btn \".concat(periodo==='total'?'btn-primary':'btn-secondary'),style:{padding:'0.5rem 1rem',fontSize:'0.875rem'},children:\"Total\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setPeriodo('semanal');setSubPeriodo(null);},className:\"btn \".concat(periodo==='semanal'?'btn-primary':'btn-secondary'),style:{padding:'0.5rem 1rem',fontSize:'0.875rem'},children:\"Semanal\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setPeriodo('mensal');setSubPeriodo(null);},className:\"btn \".concat(periodo==='mensal'?'btn-primary':'btn-secondary'),style:{padding:'0.5rem 1rem',fontSize:'0.875rem'},children:\"Mensal\"})]})]}),periodo==='semanal'&&/*#__PURE__*/_jsxs(\"div\",{style:{paddingTop:'1rem',borderTop:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'0.5rem',alignItems:'center',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.75rem',color:'#6b7280',marginRight:'0.5rem'},children:\"Per\\xEDodo:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSemanaOpcao('atual');setSubPeriodo(null);},className:\"btn \".concat(semanaOpcao==='atual'?'btn-primary':'btn-secondary'),style:{padding:'0.25rem 0.75rem',fontSize:'0.75rem'},children:\"Semana Atual\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSemanaOpcao('proxima');setSubPeriodo(null);},className:\"btn \".concat(semanaOpcao==='proxima'?'btn-primary':'btn-secondary'),style:{padding:'0.25rem 0.75rem',fontSize:'0.75rem'},children:\"Pr\\xF3xima Semana\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'0.5rem',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.75rem',color:'#6b7280',marginRight:'0.5rem'},children:\"Filtrar por dia:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSubPeriodo(null),className:\"btn \".concat(!subPeriodo?'btn-primary':'btn-secondary'),style:{padding:'0.25rem 0.75rem',fontSize:'0.75rem'},children:\"Semana Completa\"}),Object.entries(stats.estatisticasPorDia).map(_ref=>{let[dia,dados]=_ref;return/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSubPeriodo(dados.data),className:\"btn \".concat(subPeriodo&&new Date(subPeriodo).getDay()===dados.data.getDay()?'btn-primary':'btn-secondary'),style:{padding:'0.25rem 0.75rem',fontSize:'0.75rem'},children:dia},dia);})]})]}),periodo==='mensal'&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',paddingTop:'1rem',borderTop:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navegarMes(-1),className:\"btn btn-secondary\",style:{padding:'0.5rem 1rem',fontSize:'0.875rem'},children:/*#__PURE__*/_jsx(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M15 18l-6-6 6-6\"})})}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'1rem',fontWeight:'600',color:'#1a1d23',minWidth:'200px',textAlign:'center'},children:formatarMesAno(mesAno)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navegarMes(1),className:\"btn btn-secondary\",style:{padding:'0.5rem 1rem',fontSize:'0.875rem'},children:/*#__PURE__*/_jsx(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M9 18l6-6-6-6\"})})})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'1rem',paddingTop:'1rem',borderTop:'1px solid #e5e7eb'},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'1rem',flexWrap:'wrap'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.75rem',color:'#6b7280',fontWeight:'600'},children:\"Filtrar por regi\\xE3o:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'0.5rem',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"select\",{value:filtroRegiao.estado,onChange:e=>setFiltroRegiao(_objectSpread(_objectSpread({},filtroRegiao),{},{estado:e.target.value,cidade:''})),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',border:'1px solid #d1d5db',borderRadius:'4px',minWidth:'120px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Todos os Estados\"}),estadosDisponiveis.map(estado=>/*#__PURE__*/_jsx(\"option\",{value:estado,children:estado},estado))]}),/*#__PURE__*/_jsxs(\"select\",{value:filtroRegiao.cidade,onChange:e=>setFiltroRegiao(_objectSpread(_objectSpread({},filtroRegiao),{},{cidade:e.target.value})),style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem',border:'1px solid #d1d5db',borderRadius:'4px',minWidth:'120px'},disabled:!filtroRegiao.estado&&cidadesDisponiveis.length>20// Desabilitar se muitas cidades\n,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Todas as Cidades\"}),cidadesDisponiveis.map(cidade=>/*#__PURE__*/_jsx(\"option\",{value:cidade,children:cidade},cidade))]}),(filtroRegiao.estado||filtroRegiao.cidade)&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFiltroRegiao({cidade:'',estado:''}),className:\"btn btn-secondary\",style:{padding:'0.25rem 0.5rem',fontSize:'0.75rem'},title:\"Limpar filtros regionais\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"12\",height:\"12\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"line\",{x1:\"18\",y1:\"6\",x2:\"6\",y2:\"18\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"6\",y1:\"6\",x2:\"18\",y2:\"18\"})]})})]})]})})]}),periodo==='semanal'&&!subPeriodo&&Object.keys(stats.estatisticasPorDia).length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'2rem'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'1.125rem',fontWeight:'600',color:'#1a1d23',marginBottom:'1rem'},children:\"Detalhamento por Dia da Semana\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(7, 1fr)',gap:'0.75rem'},children:Object.entries(stats.estatisticasPorDia).map(_ref2=>{let[dia,dados]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",style:{textAlign:'center',cursor:'pointer',transition:'all 0.2s',':hover':{transform:'translateY(-2px)',boxShadow:'0 4px 6px rgba(0, 0, 0, 0.1)'}},onClick:()=>setSubPeriodo(dados.data),children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.875rem',fontWeight:'600',color:'#1a1d23',marginBottom:'0.5rem'},children:dia}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.75rem',color:'#6b7280',marginBottom:'0.75rem'},children:dados.data.toLocaleDateString('pt-BR',{day:'2-digit',month:'2-digit'})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'0.25rem',fontSize:'0.75rem'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{color:'#2563eb'},children:[/*#__PURE__*/_jsx(\"strong\",{children:dados.agendamentos}),\" agend.\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#10b981'},children:[/*#__PURE__*/_jsx(\"strong\",{children:dados.fechamentos}),\" fech.\"]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#6b7280',fontSize:'0.7rem'},children:formatCurrency(dados.valor)})]})]},dia);})})]}),periodo!=='total'&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'2rem'},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{fontSize:'1.125rem',fontWeight:'600',color:'#1a1d23',marginBottom:'1rem'},children:[\"Resumo do Per\\xEDodo - \",obterPeriodoTexto()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Novos Leads\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.novosLeadsPeriodo}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtitle\",style:{color:'#6b7280'},children:\"No per\\xEDodo selecionado\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Agendamentos\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.agendamentosPeriodo}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtitle\",style:{color:'#6b7280'},children:\"No per\\xEDodo selecionado\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Fechamentos\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.fechamentosPeriodo}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtitle\",style:{color:'#6b7280'},children:\"No per\\xEDodo selecionado\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Valor Fechado\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:formatCurrency(stats.valorPeriodo)}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtitle\",style:{color:'#6b7280'},children:\"No per\\xEDodo selecionado\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'2rem'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'1.125rem',fontWeight:'600',color:'#1a1d23',marginBottom:'1rem'},children:\"Totais Gerais\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total de Pacientes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.totalPacientes}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-change positive\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"polyline\",{points:\"23 6 13.5 15.5 8.5 10.5 1 18\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"17 6 23 6 23 12\"})]}),\"+12% este m\\xEAs\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Agendamentos\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.totalAgendamentos}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-change positive\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"polyline\",{points:\"23 6 13.5 15.5 8.5 10.5 1 18\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"17 6 23 6 23 12\"})]}),stats.agendamentosHoje,\" hoje\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Fechamentos\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.totalFechamentos}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-change positive\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"polyline\",{points:\"23 6 13.5 15.5 8.5 10.5 1 18\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"17 6 23 6 23 12\"})]}),\"+8% este m\\xEAs\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Valor Total\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:formatCurrency(stats.valorTotalFechamentos)}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-change positive\",children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"polyline\",{points:\"23 6 13.5 15.5 8.5 10.5 1 18\"}),/*#__PURE__*/_jsx(\"polyline\",{points:\"17 6 23 6 23 12\"})]}),\"+15% este m\\xEAs\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",style:{marginTop:'2rem',gridTemplateColumns:'repeat(2, 1fr)'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",style:{backgroundColor:'#fef3c7'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Comiss\\xE3o do M\\xEAs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",style:{color:'#f59e0b'},children:formatCurrency(stats.comissaoTotalMes)}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtitle\",style:{color:'#92400e'},children:\"Total de comiss\\xF5es este m\\xEAs\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",style:{backgroundColor:'#ede9fe'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Comiss\\xE3o Total Geral\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",style:{color:'#8b5cf6'},children:formatCurrency(stats.comissaoTotalGeral)}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtitle\",style:{color:'#5b21b6'},children:\"Comiss\\xF5es acumuladas\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-2\",style:{gap:'2rem'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",style:{minWidth:0},children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Pipeline de Vendas\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',gap:'1rem'},children:Object.entries(stats.leadsPorStatus).map(_ref3=>{let[status,count]=_ref3;const total=stats.totalPacientes||1;const percentage=count/total*100;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',marginBottom:'0.5rem'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.875rem',fontWeight:'500',textTransform:'capitalize'},children:status.replace(/_/g,' ')}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'0.875rem',color:'#6b7280'},children:[count,\" (\",percentage.toFixed(1),\"%)\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'8px',backgroundColor:'#e5e7eb',borderRadius:'4px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{width:\"\".concat(percentage,\"%\"),height:'100%',backgroundColor:getStatusColor(status),transition:'width 0.5s ease'}})})]},status);})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",style:{minWidth:0},children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Performance dos Consultores\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",style:{padding:'0'},children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Consultor\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"Pac.\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"Agend.\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center\",children:\"Fech.\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-right\",children:\"Valor\"}),/*#__PURE__*/_jsx(\"th\",{className:\"text-right\",children:\"Comiss\\xE3o\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:stats.consultoresStats.length>0?stats.consultoresStats.map((consultor,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"font-medium\",children:consultor.nome}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:consultor.totalPacientes}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:consultor.totalAgendamentos}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:consultor.totalFechamentos}),/*#__PURE__*/_jsx(\"td\",{className:\"text-right font-semibold\",children:formatCurrencyCompact(consultor.valorFechado)}),/*#__PURE__*/_jsx(\"td\",{className:\"text-right font-semibold\",style:{color:'#059669'},children:formatCurrencyCompact(consultor.comissaoTotal)})]},index)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"6\",className:\"text-center\",style:{color:'#9ca3af'},children:\"Nenhum dado dispon\\xEDvel\"})})})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",style:{marginTop:'2rem'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Taxa de Convers\\xE3o do Funil\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',gap:'2rem'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2rem',fontWeight:'700',color:'#1a1d23'},children:stats.totalPacientes}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.875rem',color:'#6b7280',marginTop:'0.25rem'},children:\"Leads Totais\"})]}),/*#__PURE__*/_jsx(\"svg\",{width:\"40\",height:\"40\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"#d1d5db\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"polyline\",{points:\"9 18 15 12 9 6\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2rem',fontWeight:'700',color:'#1a1d23'},children:stats.leadsPorStatus.agendado||0}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.875rem',color:'#6b7280',marginTop:'0.25rem'},children:\"Agendados\"})]}),/*#__PURE__*/_jsx(\"svg\",{width:\"40\",height:\"40\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"#d1d5db\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"polyline\",{points:\"9 18 15 12 9 6\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2rem',fontWeight:'700',color:'#1a1d23'},children:stats.leadsPorStatus.compareceu||0}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.875rem',color:'#6b7280',marginTop:'0.25rem'},children:\"Compareceram\"})]}),/*#__PURE__*/_jsx(\"svg\",{width:\"40\",height:\"40\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"#d1d5db\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"polyline\",{points:\"9 18 15 12 9 6\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2rem',fontWeight:'700',color:'#059669'},children:stats.leadsPorStatus.fechado||0}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.875rem',color:'#6b7280',marginTop:'0.25rem'},children:\"Fechados\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'2rem',padding:'1rem',backgroundColor:'#f9fafb',borderRadius:'8px',textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'1.5rem',fontWeight:'700',color:'#059669'},children:[stats.totalPacientes>0?((stats.leadsPorStatus.fechado||0)/stats.totalPacientes*100).toFixed(1):0,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.875rem',color:'#6b7280',marginTop:'0.25rem'},children:\"Taxa de Convers\\xE3o Total\"})]})]})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsx","_jsx","jsxs","_jsxs","Dashboard","makeRequest","user","periodo","setPeriodo","subPeriodo","setSubPeriodo","semanaOpcao","setSemanaOpcao","mesAno","setMesAno","Date","filtroRegiao","setFiltroRegiao","cidade","estado","cidadesDisponiveis","setCidadesDisponiveis","estadosDisponiveis","setEstadosDisponiveis","stats","setStats","totalPacientes","totalAgendamentos","totalFechamentos","valorTotalFechamentos","agendamentosHoje","leadsPorStatus","fechamentosPorMes","consultoresStats","comissaoTotalMes","comissaoTotalGeral","agendamentosPeriodo","fechamentosPeriodo","valorPeriodo","novosLeadsPeriodo","estatisticasPorDia","loading","setLoading","fetchStats","fetchRegioesDisponiveis","fetchCidades","cidadesRes","concat","ok","cidades","json","error","console","calcularComissao","valorFechado","clinicasParams","URLSearchParams","append","pacientesRes","agendamentosRes","fechamentosRes","consultoresRes","clinicasRes","Promise","all","toString","pacientes","agendamentos","fechamentos","consultores","clinicasFiltradas","clinicasIds","map","c","id","filter","agendamento","clinica_id","includes","fechamento","hoje","hojeStr","toISOString","split","a","data_agendamento","length","reduce","acc","p","status","valorTotal","sum","f","parseFloat","valor_fechado","dataInicio","dataFim","setHours","setDate","getDate","getDay","getFullYear","getMonth","data","data_fechamento","created_at","diasSemana","i","diaData","diaStr","valor","mesAtual","anoAtual","consultoresMap","forEach","nome","valorFechadoMes","comissaoTotal","comissaoMes","consultor_nome","comissao","dataFechamento","Object","values","estadosRes","estados","formatCurrency","value","toLocaleString","style","currency","formatCurrencyCompact","toFixed","replace","formatarMesAno","meses","navegarMes","direcao","novoMes","setMonth","obterPeriodoTexto","textoBase","toLocaleDateString","filtrosRegiao","push","join","getStatusColor","colors","lead","agendado","compareceu","fechado","nao_fechou","nao_compareceu","reagendado","className","children","marginLeft","padding","backgroundColor","color","borderRadius","fontSize","fontWeight","marginBottom","boxShadow","display","gap","alignItems","onClick","paddingTop","borderTop","marginRight","entries","_ref","dia","dados","justifyContent","width","height","viewBox","fill","stroke","strokeWidth","d","minWidth","textAlign","marginTop","flexWrap","onChange","e","_objectSpread","target","border","disabled","title","x1","y1","x2","y2","keys","gridTemplateColumns","_ref2","cursor","transition","transform","day","month","flexDirection","points","_ref3","count","total","percentage","textTransform","overflow","consultor","index","colSpan","flex"],"sources":["C:/Users/bruno/OneDrive/Área de Trabalho/InvestMoneyBots/Crm/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Dashboard = () => {\n  const { makeRequest, user } = useAuth();\n  const [periodo, setPeriodo] = useState('total'); // total, semanal, mensal\n  const [subPeriodo, setSubPeriodo] = useState(null); // para dias da semana\n  const [semanaOpcao, setSemanaOpcao] = useState('atual'); // atual, proxima\n  const [mesAno, setMesAno] = useState(new Date()); // para navegação mensal\n  const [filtroRegiao, setFiltroRegiao] = useState({ cidade: '', estado: '' });\n  const [cidadesDisponiveis, setCidadesDisponiveis] = useState([]);\n  const [estadosDisponiveis, setEstadosDisponiveis] = useState([]);\n  const [stats, setStats] = useState({\n    totalPacientes: 0,\n    totalAgendamentos: 0,\n    totalFechamentos: 0,\n    valorTotalFechamentos: 0,\n    agendamentosHoje: 0,\n    leadsPorStatus: {},\n    fechamentosPorMes: [],\n    consultoresStats: [],\n    comissaoTotalMes: 0,\n    comissaoTotalGeral: 0,\n    // Novas estatísticas por período\n    agendamentosPeriodo: 0,\n    fechamentosPeriodo: 0,\n    valorPeriodo: 0,\n    novosLeadsPeriodo: 0,\n    // Estatísticas por dia da semana\n    estatisticasPorDia: {}\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchStats();\n    fetchRegioesDisponiveis();\n  }, [periodo, subPeriodo, mesAno, semanaOpcao, filtroRegiao]);\n\n  // Buscar cidades quando estado for alterado\n  useEffect(() => {\n    const fetchCidades = async () => {\n      try {\n        if (filtroRegiao.estado) {\n          const cidadesRes = await makeRequest(`/clinicas/cidades?estado=${filtroRegiao.estado}`);\n          if (cidadesRes.ok) {\n            const cidades = await cidadesRes.json();\n            setCidadesDisponiveis(cidades);\n          }\n        } else {\n          const cidadesRes = await makeRequest('/clinicas/cidades');\n          if (cidadesRes.ok) {\n            const cidades = await cidadesRes.json();\n            setCidadesDisponiveis(cidades);\n          }\n        }\n      } catch (error) {\n        console.error('Erro ao carregar cidades:', error);\n      }\n    };\n\n    fetchCidades();\n  }, [filtroRegiao.estado]);\n\n  const calcularComissao = (valorFechado) => {\n    return (valorFechado / 1000) * 5;\n  };\n\n  const fetchStats = async () => {\n    try {\n      // Construir parâmetros de busca para clínicas\n      const clinicasParams = new URLSearchParams();\n      if (filtroRegiao.estado) clinicasParams.append('estado', filtroRegiao.estado);\n      if (filtroRegiao.cidade) clinicasParams.append('cidade', filtroRegiao.cidade);\n      \n      const [pacientesRes, agendamentosRes, fechamentosRes, consultoresRes, clinicasRes] = await Promise.all([\n        makeRequest('/pacientes'),\n        makeRequest('/agendamentos'),\n        makeRequest('/fechamentos'),\n        makeRequest('/consultores'),\n        makeRequest(`/clinicas?${clinicasParams.toString()}`)\n      ]);\n\n      const pacientes = await pacientesRes.json();\n      let agendamentos = await agendamentosRes.json();\n      let fechamentos = await fechamentosRes.json();\n      const consultores = await consultoresRes.json();\n      const clinicasFiltradas = await clinicasRes.json();\n\n      // Aplicar filtros por região se especificados\n      if (filtroRegiao.cidade || filtroRegiao.estado) {\n        const clinicasIds = clinicasFiltradas.map(c => c.id);\n        \n        // Filtrar agendamentos por região (via clínicas)\n        agendamentos = agendamentos.filter(agendamento => {\n          if (!agendamento.clinica_id) return false; // excluir agendamentos sem clínica quando há filtro\n          return clinicasIds.includes(agendamento.clinica_id);\n        });\n\n        // Filtrar fechamentos por região (via clínicas)\n        fechamentos = fechamentos.filter(fechamento => {\n          if (!fechamento.clinica_id) return false; // excluir fechamentos sem clínica quando há filtro\n          return clinicasIds.includes(fechamento.clinica_id);\n        });\n      }\n\n      const hoje = new Date();\n      const hojeStr = hoje.toISOString().split('T')[0];\n      const agendamentosHoje = agendamentos.filter(a => a.data_agendamento === hojeStr).length;\n\n      const leadsPorStatus = pacientes.reduce((acc, p) => {\n        acc[p.status] = (acc[p.status] || 0) + 1;\n        return acc;\n      }, {});\n\n      const valorTotal = fechamentos.reduce((sum, f) => sum + parseFloat(f.valor_fechado || 0), 0);\n\n      // Calcular data de início e fim baseado no período selecionado\n      let dataInicio = null;\n      let dataFim = null;\n      \n      if (periodo === 'total') {\n        // Sem filtro de data para total\n        dataInicio = null;\n        dataFim = null;\n      } else if (periodo === 'semanal') {\n        if (subPeriodo) {\n          // Dia específico da semana\n          dataInicio = new Date(subPeriodo);\n          dataInicio.setHours(0, 0, 0, 0);\n          dataFim = new Date(subPeriodo);\n          dataFim.setHours(23, 59, 59, 999);\n        } else {\n          // Semana atual ou próxima\n          dataInicio = new Date(hoje);\n          \n          if (semanaOpcao === 'proxima') {\n            // Próxima semana\n            dataInicio.setDate(hoje.getDate() + 7 - hoje.getDay()); // Próximo domingo\n          } else {\n            // Semana atual\n            dataInicio.setDate(hoje.getDate() - hoje.getDay()); // Domingo atual\n          }\n          \n          dataInicio.setHours(0, 0, 0, 0);\n          dataFim = new Date(dataInicio);\n          dataFim.setDate(dataInicio.getDate() + 6); // Sábado\n          dataFim.setHours(23, 59, 59, 999);\n        }\n      } else if (periodo === 'mensal') {\n        // Mês selecionado\n        dataInicio = new Date(mesAno.getFullYear(), mesAno.getMonth(), 1);\n        dataFim = new Date(mesAno.getFullYear(), mesAno.getMonth() + 1, 0);\n        dataFim.setHours(23, 59, 59, 999);\n      }\n\n      // Filtrar dados por período\n      const agendamentosPeriodo = dataInicio ? agendamentos.filter(a => {\n        const data = new Date(a.data_agendamento);\n        return data >= dataInicio && data <= dataFim;\n      }).length : agendamentos.length;\n\n      const fechamentosPeriodo = dataInicio ? fechamentos.filter(f => {\n        const data = new Date(f.data_fechamento);\n        return data >= dataInicio && data <= dataFim;\n      }) : fechamentos;\n\n      const valorPeriodo = fechamentosPeriodo.reduce((sum, f) => \n        sum + parseFloat(f.valor_fechado || 0), 0\n      );\n\n      const novosLeadsPeriodo = dataInicio ? pacientes.filter(p => {\n        const data = new Date(p.created_at);\n        return data >= dataInicio && data <= dataFim;\n      }).length : pacientes.length;\n\n      // Calcular estatísticas por dia da semana (apenas para visualização semanal)\n      let estatisticasPorDia = {};\n      if (periodo === 'semanal' && !subPeriodo) {\n        const diasSemana = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];\n        \n        for (let i = 0; i < 7; i++) {\n          const diaData = new Date(dataInicio);\n          diaData.setDate(dataInicio.getDate() + i);\n          const diaStr = diaData.toISOString().split('T')[0];\n          \n          estatisticasPorDia[diasSemana[i]] = {\n            data: diaData,\n            agendamentos: agendamentos.filter(a => a.data_agendamento === diaStr).length,\n            fechamentos: fechamentos.filter(f => f.data_fechamento === diaStr).length,\n            valor: fechamentos\n              .filter(f => f.data_fechamento === diaStr)\n              .reduce((sum, f) => sum + parseFloat(f.valor_fechado || 0), 0)\n          };\n        }\n      }\n\n      // Calcular comissões\n      const mesAtual = new Date().getMonth();\n      const anoAtual = new Date().getFullYear();\n      \n      let comissaoTotalMes = 0;\n      let comissaoTotalGeral = 0;\n\n      // Inicializar mapa de consultores com TODOS os consultores\n      const consultoresMap = {};\n      consultores.forEach(c => {\n        consultoresMap[c.nome] = {\n          nome: c.nome,\n          totalPacientes: 0,\n          totalAgendamentos: 0,\n          totalFechamentos: 0,\n          valorFechado: 0,\n          valorFechadoMes: 0,\n          comissaoTotal: 0,\n          comissaoMes: 0\n        };\n      });\n\n      // Atualizar estatísticas dos consultores\n      pacientes.forEach(p => {\n        if (p.consultor_nome && consultoresMap[p.consultor_nome]) {\n          consultoresMap[p.consultor_nome].totalPacientes++;\n        }\n      });\n\n      agendamentos.forEach(a => {\n        if (a.consultor_nome && consultoresMap[a.consultor_nome]) {\n          consultoresMap[a.consultor_nome].totalAgendamentos++;\n        }\n      });\n\n      fechamentos.forEach(f => {\n        if (f.consultor_nome && consultoresMap[f.consultor_nome]) {\n          const valor = parseFloat(f.valor_fechado || 0);\n          consultoresMap[f.consultor_nome].totalFechamentos++;\n          consultoresMap[f.consultor_nome].valorFechado += valor;\n          \n          const comissao = calcularComissao(valor);\n          consultoresMap[f.consultor_nome].comissaoTotal += comissao;\n          comissaoTotalGeral += comissao;\n\n          // Verificar se é do mês atual\n          const dataFechamento = new Date(f.data_fechamento);\n          if (dataFechamento.getMonth() === mesAtual && dataFechamento.getFullYear() === anoAtual) {\n            consultoresMap[f.consultor_nome].valorFechadoMes += valor;\n            consultoresMap[f.consultor_nome].comissaoMes += comissao;\n            comissaoTotalMes += comissao;\n          }\n        }\n      });\n\n      const consultoresStats = Object.values(consultoresMap);\n\n      setStats({\n        totalPacientes: pacientes.length,\n        totalAgendamentos: agendamentos.length,\n        totalFechamentos: fechamentos.length,\n        valorTotalFechamentos: valorTotal,\n        agendamentosHoje,\n        leadsPorStatus,\n        consultoresStats,\n        comissaoTotalMes,\n        comissaoTotalGeral,\n        agendamentosPeriodo,\n        fechamentosPeriodo: fechamentosPeriodo.length,\n        valorPeriodo,\n        novosLeadsPeriodo,\n        estatisticasPorDia\n      });\n      setLoading(false);\n    } catch (error) {\n      console.error('Erro ao carregar estatísticas:', error);\n      setLoading(false);\n    }\n  };\n\n  const fetchRegioesDisponiveis = async () => {\n    try {\n      const estadosRes = await makeRequest('/clinicas/estados');\n      if (estadosRes.ok) {\n        const estados = await estadosRes.json();\n        setEstadosDisponiveis(estados);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar estados:', error);\n    }\n  };\n\n  const formatCurrency = (value) => {\n    return value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\n  };\n\n  const formatCurrencyCompact = (value) => {\n    if (value >= 1000000) {\n      return `R$ ${(value / 1000000).toFixed(1).replace('.', ',')}M`;\n    } else if (value >= 1000) {\n      return `R$ ${(value / 1000).toFixed(0)}k`;\n    } else {\n      return value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\n    }\n  };\n\n  const formatarMesAno = (data) => {\n    const meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', \n                   'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return `${meses[data.getMonth()]} ${data.getFullYear()}`;\n  };\n\n  const navegarMes = (direcao) => {\n    const novoMes = new Date(mesAno);\n    novoMes.setMonth(mesAno.getMonth() + direcao);\n    setMesAno(novoMes);\n  };\n\n  const diasSemana = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];\n\n  const obterPeriodoTexto = () => {\n    let textoBase = '';\n    \n    if (periodo === 'total') {\n      textoBase = 'Todos os dados';\n    } else if (periodo === 'semanal') {\n      if (subPeriodo) {\n        const data = new Date(subPeriodo);\n        textoBase = `${diasSemana[data.getDay()]}, ${data.toLocaleDateString('pt-BR')}`;\n      } else {\n        textoBase = semanaOpcao === 'proxima' ? 'Próxima semana' : 'Semana atual';\n      }\n    } else if (periodo === 'mensal') {\n      textoBase = formatarMesAno(mesAno);\n    }\n\n    // Adicionar informação de filtro regional\n    const filtrosRegiao = [];\n    if (filtroRegiao.estado) filtrosRegiao.push(`${filtroRegiao.estado}`);\n    if (filtroRegiao.cidade) filtrosRegiao.push(`${filtroRegiao.cidade}`);\n    \n    if (filtrosRegiao.length > 0) {\n      textoBase += ` - ${filtrosRegiao.join(', ')}`;\n    }\n\n    return textoBase;\n  };\n\n  const getStatusColor = (status) => {\n    const colors = {\n      lead: '#f59e0b',\n      agendado: '#3b82f6',\n      compareceu: '#10b981',\n      fechado: '#059669',\n      nao_fechou: '#ef4444',\n      nao_compareceu: '#f87171',\n      reagendado: '#8b5cf6'\n    };\n    return colors[status] || '#6b7280';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">Dashboard</h1>\n        <p className=\"page-subtitle\">\n          Bem-vindo, {user?.nome}\n          {(filtroRegiao.cidade || filtroRegiao.estado) && (\n            <span style={{ \n              marginLeft: '1rem',\n              padding: '0.25rem 0.5rem',\n              backgroundColor: '#dbeafe',\n              color: '#1e40af',\n              borderRadius: '12px',\n              fontSize: '0.75rem',\n              fontWeight: '500'\n            }}>\n              📍 Filtrado por região\n            </span>\n          )}\n        </p>\n      </div>\n\n      {/* Filtro de Período */}\n      <div style={{ \n        marginBottom: '2rem',\n        padding: '1rem',\n        backgroundColor: 'white',\n        borderRadius: '8px',\n        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)'\n      }}>\n        <div style={{ display: 'flex', gap: '1rem', alignItems: 'center', marginBottom: '1rem' }}>\n          <span style={{ fontSize: '0.875rem', fontWeight: '600', color: '#374151' }}>\n            Visualizar por:\n          </span>\n          <div style={{ display: 'flex', gap: '0.5rem' }}>\n            <button\n              onClick={() => { setPeriodo('total'); setSubPeriodo(null); }}\n              className={`btn ${periodo === 'total' ? 'btn-primary' : 'btn-secondary'}`}\n              style={{ padding: '0.5rem 1rem', fontSize: '0.875rem' }}\n            >\n              Total\n            </button>\n            <button\n              onClick={() => { setPeriodo('semanal'); setSubPeriodo(null); }}\n              className={`btn ${periodo === 'semanal' ? 'btn-primary' : 'btn-secondary'}`}\n              style={{ padding: '0.5rem 1rem', fontSize: '0.875rem' }}\n            >\n              Semanal\n            </button>\n            <button\n              onClick={() => { setPeriodo('mensal'); setSubPeriodo(null); }}\n              className={`btn ${periodo === 'mensal' ? 'btn-primary' : 'btn-secondary'}`}\n              style={{ padding: '0.5rem 1rem', fontSize: '0.875rem' }}\n            >\n              Mensal\n            </button>\n          </div>\n        </div>\n\n        {/* Controles específicos por período */}\n        {periodo === 'semanal' && (\n          <div style={{ \n            paddingTop: '1rem',\n            borderTop: '1px solid #e5e7eb'\n          }}>\n            {/* Seleção de semana atual/próxima */}\n            <div style={{ \n              display: 'flex', \n              gap: '0.5rem', \n              alignItems: 'center',\n              marginBottom: '1rem'\n            }}>\n              <span style={{ fontSize: '0.75rem', color: '#6b7280', marginRight: '0.5rem' }}>\n                Período:\n              </span>\n              <button\n                onClick={() => { setSemanaOpcao('atual'); setSubPeriodo(null); }}\n                className={`btn ${semanaOpcao === 'atual' ? 'btn-primary' : 'btn-secondary'}`}\n                style={{ padding: '0.25rem 0.75rem', fontSize: '0.75rem' }}\n              >\n                Semana Atual\n              </button>\n              <button\n                onClick={() => { setSemanaOpcao('proxima'); setSubPeriodo(null); }}\n                className={`btn ${semanaOpcao === 'proxima' ? 'btn-primary' : 'btn-secondary'}`}\n                style={{ padding: '0.25rem 0.75rem', fontSize: '0.75rem' }}\n              >\n                Próxima Semana\n              </button>\n            </div>\n\n            {/* Filtrar por dia específico */}\n            <div style={{ \n              display: 'flex', \n              gap: '0.5rem', \n              alignItems: 'center'\n            }}>\n              <span style={{ fontSize: '0.75rem', color: '#6b7280', marginRight: '0.5rem' }}>\n                Filtrar por dia:\n              </span>\n              <button\n                onClick={() => setSubPeriodo(null)}\n                className={`btn ${!subPeriodo ? 'btn-primary' : 'btn-secondary'}`}\n                style={{ padding: '0.25rem 0.75rem', fontSize: '0.75rem' }}\n              >\n                Semana Completa\n              </button>\n              {Object.entries(stats.estatisticasPorDia).map(([dia, dados]) => (\n                <button\n                  key={dia}\n                  onClick={() => setSubPeriodo(dados.data)}\n                  className={`btn ${subPeriodo && new Date(subPeriodo).getDay() === dados.data.getDay() ? \n                    'btn-primary' : 'btn-secondary'}`}\n                  style={{ padding: '0.25rem 0.75rem', fontSize: '0.75rem' }}\n                >\n                  {dia}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {periodo === 'mensal' && (\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between',\n            alignItems: 'center',\n            paddingTop: '1rem',\n            borderTop: '1px solid #e5e7eb'\n          }}>\n            <button\n              onClick={() => navegarMes(-1)}\n              className=\"btn btn-secondary\"\n              style={{ padding: '0.5rem 1rem', fontSize: '0.875rem' }}\n            >\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M15 18l-6-6 6-6\" />\n              </svg>\n            </button>\n            \n            <span style={{ \n              fontSize: '1rem', \n              fontWeight: '600', \n              color: '#1a1d23',\n              minWidth: '200px',\n              textAlign: 'center'\n            }}>\n              {formatarMesAno(mesAno)}\n            </span>\n            \n            <button\n              onClick={() => navegarMes(1)}\n              className=\"btn btn-secondary\"\n              style={{ padding: '0.5rem 1rem', fontSize: '0.875rem' }}\n            >\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M9 18l6-6-6-6\" />\n              </svg>\n            </button>\n          </div>\n        )}\n\n        {/* Filtros por Região */}\n        <div style={{ \n          marginTop: '1rem',\n          paddingTop: '1rem',\n          borderTop: '1px solid #e5e7eb'\n        }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '1rem', flexWrap: 'wrap' }}>\n            <span style={{ fontSize: '0.75rem', color: '#6b7280', fontWeight: '600' }}>\n              Filtrar por região:\n            </span>\n            \n            <div style={{ display: 'flex', gap: '0.5rem', alignItems: 'center' }}>\n              <select\n                value={filtroRegiao.estado}\n                onChange={(e) => setFiltroRegiao({ ...filtroRegiao, estado: e.target.value, cidade: '' })}\n                style={{\n                  padding: '0.25rem 0.5rem',\n                  fontSize: '0.75rem',\n                  border: '1px solid #d1d5db',\n                  borderRadius: '4px',\n                  minWidth: '120px'\n                }}\n              >\n                <option value=\"\">Todos os Estados</option>\n                {estadosDisponiveis.map(estado => (\n                  <option key={estado} value={estado}>{estado}</option>\n                ))}\n              </select>\n\n              <select\n                value={filtroRegiao.cidade}\n                onChange={(e) => setFiltroRegiao({ ...filtroRegiao, cidade: e.target.value })}\n                style={{\n                  padding: '0.25rem 0.5rem',\n                  fontSize: '0.75rem',\n                  border: '1px solid #d1d5db',\n                  borderRadius: '4px',\n                  minWidth: '120px'\n                }}\n                disabled={!filtroRegiao.estado && cidadesDisponiveis.length > 20} // Desabilitar se muitas cidades\n              >\n                <option value=\"\">Todas as Cidades</option>\n                {cidadesDisponiveis.map(cidade => (\n                  <option key={cidade} value={cidade}>{cidade}</option>\n                ))}\n              </select>\n\n              {(filtroRegiao.estado || filtroRegiao.cidade) && (\n                <button\n                  onClick={() => setFiltroRegiao({ cidade: '', estado: '' })}\n                  className=\"btn btn-secondary\"\n                  style={{ padding: '0.25rem 0.5rem', fontSize: '0.75rem' }}\n                  title=\"Limpar filtros regionais\"\n                >\n                  <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                  </svg>\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Estatísticas detalhadas por dia (apenas no modo semanal) */}\n      {periodo === 'semanal' && !subPeriodo && Object.keys(stats.estatisticasPorDia).length > 0 && (\n        <div style={{ marginBottom: '2rem' }}>\n          <h3 style={{ fontSize: '1.125rem', fontWeight: '600', color: '#1a1d23', marginBottom: '1rem' }}>\n            Detalhamento por Dia da Semana\n          </h3>\n          <div style={{ \n            display: 'grid', \n            gridTemplateColumns: 'repeat(7, 1fr)', \n            gap: '0.75rem' \n          }}>\n            {Object.entries(stats.estatisticasPorDia).map(([dia, dados]) => (\n              <div \n                key={dia}\n                className=\"stat-card\"\n                style={{ \n                  textAlign: 'center',\n                  cursor: 'pointer',\n                  transition: 'all 0.2s',\n                  ':hover': {\n                    transform: 'translateY(-2px)',\n                    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n                  }\n                }}\n                onClick={() => setSubPeriodo(dados.data)}\n              >\n                <div style={{ \n                  fontSize: '0.875rem', \n                  fontWeight: '600', \n                  color: '#1a1d23',\n                  marginBottom: '0.5rem'\n                }}>\n                  {dia}\n                </div>\n                <div style={{ \n                  fontSize: '0.75rem', \n                  color: '#6b7280',\n                  marginBottom: '0.75rem'\n                }}>\n                  {dados.data.toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit' })}\n                </div>\n                <div style={{ \n                  display: 'flex', \n                  flexDirection: 'column', \n                  gap: '0.25rem',\n                  fontSize: '0.75rem'\n                }}>\n                  <div style={{ color: '#2563eb' }}>\n                    <strong>{dados.agendamentos}</strong> agend.\n                  </div>\n                  <div style={{ color: '#10b981' }}>\n                    <strong>{dados.fechamentos}</strong> fech.\n                  </div>\n                  <div style={{ color: '#6b7280', fontSize: '0.7rem' }}>\n                    {formatCurrency(dados.valor)}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* KPIs do Período - Apenas quando não é Total */}\n      {periodo !== 'total' && (\n        <div style={{ marginBottom: '2rem' }}>\n          <h3 style={{ fontSize: '1.125rem', fontWeight: '600', color: '#1a1d23', marginBottom: '1rem' }}>\n            Resumo do Período - {obterPeriodoTexto()}\n          </h3>\n          <div className=\"stats-grid\">\n            <div className=\"stat-card\">\n              <div className=\"stat-label\">Novos Leads</div>\n              <div className=\"stat-value\">{stats.novosLeadsPeriodo}</div>\n              <div className=\"stat-subtitle\" style={{ color: '#6b7280' }}>\n                No período selecionado\n              </div>\n            </div>\n\n            <div className=\"stat-card\">\n              <div className=\"stat-label\">Agendamentos</div>\n              <div className=\"stat-value\">{stats.agendamentosPeriodo}</div>\n              <div className=\"stat-subtitle\" style={{ color: '#6b7280' }}>\n                No período selecionado\n              </div>\n            </div>\n\n            <div className=\"stat-card\">\n              <div className=\"stat-label\">Fechamentos</div>\n              <div className=\"stat-value\">{stats.fechamentosPeriodo}</div>\n              <div className=\"stat-subtitle\" style={{ color: '#6b7280' }}>\n                No período selecionado\n              </div>\n            </div>\n\n            <div className=\"stat-card\">\n              <div className=\"stat-label\">Valor Fechado</div>\n              <div className=\"stat-value\">{formatCurrency(stats.valorPeriodo)}</div>\n              <div className=\"stat-subtitle\" style={{ color: '#6b7280' }}>\n                No período selecionado\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* KPIs Principais */}\n      <div style={{ marginBottom: '2rem' }}>\n        <h3 style={{ fontSize: '1.125rem', fontWeight: '600', color: '#1a1d23', marginBottom: '1rem' }}>\n          Totais Gerais\n        </h3>\n        <div className=\"stats-grid\">\n          <div className=\"stat-card\">\n            <div className=\"stat-label\">Total de Pacientes</div>\n            <div className=\"stat-value\">{stats.totalPacientes}</div>\n            <div className=\"stat-change positive\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\"></polyline>\n                <polyline points=\"17 6 23 6 23 12\"></polyline>\n              </svg>\n              +12% este mês\n            </div>\n          </div>\n\n          <div className=\"stat-card\">\n            <div className=\"stat-label\">Agendamentos</div>\n            <div className=\"stat-value\">{stats.totalAgendamentos}</div>\n            <div className=\"stat-change positive\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\"></polyline>\n                <polyline points=\"17 6 23 6 23 12\"></polyline>\n              </svg>\n              {stats.agendamentosHoje} hoje\n            </div>\n          </div>\n\n          <div className=\"stat-card\">\n            <div className=\"stat-label\">Fechamentos</div>\n            <div className=\"stat-value\">{stats.totalFechamentos}</div>\n            <div className=\"stat-change positive\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\"></polyline>\n                <polyline points=\"17 6 23 6 23 12\"></polyline>\n              </svg>\n              +8% este mês\n            </div>\n          </div>\n\n          <div className=\"stat-card\">\n            <div className=\"stat-label\">Valor Total</div>\n            <div className=\"stat-value\">{formatCurrency(stats.valorTotalFechamentos)}</div>\n            <div className=\"stat-change positive\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\"></polyline>\n                <polyline points=\"17 6 23 6 23 12\"></polyline>\n              </svg>\n              +15% este mês\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Cards de Comissão */}\n      <div className=\"stats-grid\" style={{ marginTop: '2rem', gridTemplateColumns: 'repeat(2, 1fr)' }}>\n        <div className=\"stat-card\" style={{ backgroundColor: '#fef3c7' }}>\n          <div className=\"stat-label\">Comissão do Mês</div>\n          <div className=\"stat-value\" style={{ color: '#f59e0b' }}>\n            {formatCurrency(stats.comissaoTotalMes)}\n          </div>\n          <div className=\"stat-subtitle\" style={{ color: '#92400e' }}>\n            Total de comissões este mês\n          </div>\n        </div>\n\n        <div className=\"stat-card\" style={{ backgroundColor: '#ede9fe' }}>\n          <div className=\"stat-label\">Comissão Total Geral</div>\n          <div className=\"stat-value\" style={{ color: '#8b5cf6' }}>\n            {formatCurrency(stats.comissaoTotalGeral)}\n          </div>\n          <div className=\"stat-subtitle\" style={{ color: '#5b21b6' }}>\n            Comissões acumuladas\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-2\" style={{ gap: '2rem' }}>\n        {/* Pipeline de Vendas */}\n        <div className=\"card\" style={{ minWidth: 0 }}>\n          <div className=\"card-header\">\n            <h2 className=\"card-title\">Pipeline de Vendas</h2>\n          </div>\n          <div className=\"card-body\">\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n              {Object.entries(stats.leadsPorStatus).map(([status, count]) => {\n                const total = stats.totalPacientes || 1;\n                const percentage = (count / total) * 100;\n                return (\n                  <div key={status}>\n                    <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '0.5rem' }}>\n                      <span style={{ fontSize: '0.875rem', fontWeight: '500', textTransform: 'capitalize' }}>\n                        {status.replace(/_/g, ' ')}\n                      </span>\n                      <span style={{ fontSize: '0.875rem', color: '#6b7280' }}>\n                        {count} ({percentage.toFixed(1)}%)\n                      </span>\n                    </div>\n                    <div style={{ \n                      width: '100%', \n                      height: '8px', \n                      backgroundColor: '#e5e7eb',\n                      borderRadius: '4px',\n                      overflow: 'hidden'\n                    }}>\n                      <div style={{\n                        width: `${percentage}%`,\n                        height: '100%',\n                        backgroundColor: getStatusColor(status),\n                        transition: 'width 0.5s ease'\n                      }} />\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* Performance dos Consultores */}\n        <div className=\"card\" style={{ minWidth: 0 }}>\n          <div className=\"card-header\">\n            <h2 className=\"card-title\">Performance dos Consultores</h2>\n          </div>\n          <div className=\"card-body\" style={{ padding: '0' }}>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Consultor</th>\n                  <th className=\"text-center\">Pac.</th>\n                  <th className=\"text-center\">Agend.</th>\n                  <th className=\"text-center\">Fech.</th>\n                  <th className=\"text-right\">Valor</th>\n                  <th className=\"text-right\">Comissão</th>\n                </tr>\n              </thead>\n              <tbody>\n                {stats.consultoresStats.length > 0 ? (\n                  stats.consultoresStats.map((consultor, index) => (\n                    <tr key={index}>\n                      <td className=\"font-medium\">{consultor.nome}</td>\n                      <td className=\"text-center\">{consultor.totalPacientes}</td>\n                      <td className=\"text-center\">{consultor.totalAgendamentos}</td>\n                      <td className=\"text-center\">{consultor.totalFechamentos}</td>\n                      <td className=\"text-right font-semibold\">\n                        {formatCurrencyCompact(consultor.valorFechado)}\n                      </td>\n                      <td className=\"text-right font-semibold\" style={{ color: '#059669' }}>\n                        {formatCurrencyCompact(consultor.comissaoTotal)}\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"6\" className=\"text-center\" style={{ color: '#9ca3af' }}>\n                      Nenhum dado disponível\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      {/* Gráfico de Conversão */}\n      <div className=\"card\" style={{ marginTop: '2rem' }}>\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">Taxa de Conversão do Funil</h2>\n        </div>\n        <div className=\"card-body\">\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', gap: '2rem' }}>\n            <div style={{ flex: 1, textAlign: 'center' }}>\n              <div style={{ fontSize: '2rem', fontWeight: '700', color: '#1a1d23' }}>\n                {stats.totalPacientes}\n              </div>\n              <div style={{ fontSize: '0.875rem', color: '#6b7280', marginTop: '0.25rem' }}>\n                Leads Totais\n              </div>\n            </div>\n\n            <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#d1d5db\" strokeWidth=\"2\">\n              <polyline points=\"9 18 15 12 9 6\"></polyline>\n            </svg>\n\n            <div style={{ flex: 1, textAlign: 'center' }}>\n              <div style={{ fontSize: '2rem', fontWeight: '700', color: '#1a1d23' }}>\n                {stats.leadsPorStatus.agendado || 0}\n              </div>\n              <div style={{ fontSize: '0.875rem', color: '#6b7280', marginTop: '0.25rem' }}>\n                Agendados\n              </div>\n            </div>\n\n            <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#d1d5db\" strokeWidth=\"2\">\n              <polyline points=\"9 18 15 12 9 6\"></polyline>\n            </svg>\n\n            <div style={{ flex: 1, textAlign: 'center' }}>\n              <div style={{ fontSize: '2rem', fontWeight: '700', color: '#1a1d23' }}>\n                {stats.leadsPorStatus.compareceu || 0}\n              </div>\n              <div style={{ fontSize: '0.875rem', color: '#6b7280', marginTop: '0.25rem' }}>\n                Compareceram\n              </div>\n            </div>\n\n            <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#d1d5db\" strokeWidth=\"2\">\n              <polyline points=\"9 18 15 12 9 6\"></polyline>\n            </svg>\n\n            <div style={{ flex: 1, textAlign: 'center' }}>\n              <div style={{ fontSize: '2rem', fontWeight: '700', color: '#059669' }}>\n                {stats.leadsPorStatus.fechado || 0}\n              </div>\n              <div style={{ fontSize: '0.875rem', color: '#6b7280', marginTop: '0.25rem' }}>\n                Fechados\n              </div>\n            </div>\n          </div>\n\n          <div style={{ \n            marginTop: '2rem', \n            padding: '1rem', \n            backgroundColor: '#f9fafb',\n            borderRadius: '8px',\n            textAlign: 'center' \n          }}>\n            <div style={{ fontSize: '1.5rem', fontWeight: '700', color: '#059669' }}>\n              {stats.totalPacientes > 0 \n                ? ((stats.leadsPorStatus.fechado || 0) / stats.totalPacientes * 100).toFixed(1)\n                : 0}%\n            </div>\n            <div style={{ fontSize: '0.875rem', color: '#6b7280', marginTop: '0.25rem' }}>\n              Taxa de Conversão Total\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}