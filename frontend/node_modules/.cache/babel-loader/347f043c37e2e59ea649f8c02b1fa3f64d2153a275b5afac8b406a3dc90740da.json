{"ast":null,"code":"import _objectSpread from\"C:/Users/bruno/OneDrive/\\xC1rea de Trabalho/InvestMoneyBots/Crm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth deve ser usado dentro de um AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(()=>{const savedToken=localStorage.getItem('token');// Verificar se o token 칠 v치lido (n칚o vazio e n칚o 'null' string)\nreturn savedToken&&savedToken!=='null'&&savedToken.trim()!==''?savedToken:null;});// Configurar URL base da API\nconst API_BASE_URL=process.env.REACT_APP_API_URL||(process.env.NODE_ENV==='production'?'/api':'http://localhost:5000/api');const clearAllData=()=>{console.log('Limpando todos os dados de autentica칞칚o');setUser(null);setToken(null);localStorage.clear();};const makeRequest=async function(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const fullUrl=url.startsWith('http')?url:\"\".concat(API_BASE_URL).concat(url);const headers=_objectSpread({'Content-Type':'application/json'},options.headers||{});if(token){headers.Authorization=\"Bearer \".concat(token);}const response=await fetch(fullUrl,_objectSpread(_objectSpread({},options),{},{headers}));if(response.status===401){// Token expirado ou inv치lido\nlogout();throw new Error('Sess칚o expirada');}return response;};const login=async(email,senha)=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,senha})});const data=await response.json();if(!response.ok){throw new Error(data.error||'Erro no login');}const{token:newToken,usuario}=data;setToken(newToken);setUser(usuario);localStorage.setItem('token',newToken);localStorage.setItem('user',JSON.stringify(usuario));return{success:true,user:usuario};}catch(error){console.error('Erro no login:',error);return{success:false,error:error.message};}};const logout=()=>{clearAllData();};const verifyToken=async()=>{if(!token||token.trim()===''||token==='null'){console.log('Nenhum token v치lido encontrado - redirecionando para login');clearAllData();setLoading(false);return;}console.log('Verificando token...');try{const response=await makeRequest('/verify-token');if(response.ok){const data=await response.json();console.log('Token v치lido - usu치rio autenticado:',data.usuario.email);setUser(data.usuario);localStorage.setItem('user',JSON.stringify(data.usuario));}else{console.log('Token inv치lido - fazendo logout');clearAllData();}}catch(error){console.error('Erro ao verificar token:',error);clearAllData();}finally{setLoading(false);}};useEffect(()=>{console.log('游댃 Iniciando verifica칞칚o de autentica칞칚o...');// Verificar se h치 dados corrompidos e limpar se necess치rio\ntry{const savedUser=localStorage.getItem('user');const savedToken=localStorage.getItem('token');console.log('游늵 Estado inicial:',{hasUser:!!savedUser,hasToken:!!savedToken,tokenState:!!token});// Se h치 dados inconsistentes, limpar tudo\nif(savedUser&&!savedToken||!savedUser&&savedToken){console.log('丘멆잺 Dados inconsistentes no localStorage - limpando');clearAllData();setLoading(false);return;}// Se h치 usu치rio salvo mas token 칠 inv치lido\nif(savedUser&&savedToken&&(!token||token.trim()===''||token==='null')){console.log('丘멆잺 Token inv치lido mas usu치rio salvo - limpando');clearAllData();setLoading(false);return;}// Tentar fazer parse do usu치rio se existir\nif(savedUser){JSON.parse(savedUser);}}catch(error){console.log('游눤 Dados corrompidos no localStorage - limpando');clearAllData();setLoading(false);return;}// Se chegou at칠 aqui, verificar token\nverifyToken();},[]);const value={user,token,loading,login,logout,makeRequest,isAuthenticated:!!user&&!!token,isAdmin:(user===null||user===void 0?void 0:user.tipo)==='admin',isConsultor:(user===null||user===void 0?void 0:user.tipo)==='consultor'};// Log do estado atual para debug\nconsole.log('游댌 AuthContext State:',{hasUser:!!user,hasToken:!!token,loading,isAuthenticated:!!user&&!!token,userType:user===null||user===void 0?void 0:user.tipo});return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","savedToken","localStorage","getItem","trim","API_BASE_URL","process","env","REACT_APP_API_URL","NODE_ENV","clearAllData","console","log","clear","makeRequest","url","options","arguments","length","undefined","fullUrl","startsWith","concat","headers","_objectSpread","Authorization","response","fetch","status","logout","login","email","senha","method","body","JSON","stringify","data","json","ok","error","newToken","usuario","setItem","success","message","verifyToken","savedUser","hasUser","hasToken","tokenState","parse","value","isAuthenticated","isAdmin","tipo","isConsultor","userType","Provider"],"sources":["C:/Users/bruno/OneDrive/츼rea de Trabalho/InvestMoneyBots/Crm/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(() => {\n    const savedToken = localStorage.getItem('token');\n    // Verificar se o token 칠 v치lido (n칚o vazio e n칚o 'null' string)\n    return savedToken && savedToken !== 'null' && savedToken.trim() !== '' ? savedToken : null;\n  });\n\n  // Configurar URL base da API\n  const API_BASE_URL = process.env.REACT_APP_API_URL || \n    (process.env.NODE_ENV === 'production' \n      ? '/api' \n      : 'http://localhost:5000/api');\n\n  const clearAllData = () => {\n    console.log('Limpando todos os dados de autentica칞칚o');\n    setUser(null);\n    setToken(null);\n    localStorage.clear();\n  };\n\n  const makeRequest = async (url, options = {}) => {\n    const fullUrl = url.startsWith('http') ? url : `${API_BASE_URL}${url}`;\n    \n    const headers = {\n      'Content-Type': 'application/json',\n      ...(options.headers || {})\n    };\n\n    if (token) {\n      headers.Authorization = `Bearer ${token}`;\n    }\n\n    const response = await fetch(fullUrl, {\n      ...options,\n      headers\n    });\n\n    if (response.status === 401) {\n      // Token expirado ou inv치lido\n      logout();\n      throw new Error('Sess칚o expirada');\n    }\n\n    return response;\n  };\n\n  const login = async (email, senha) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, senha })\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro no login');\n      }\n\n      const { token: newToken, usuario } = data;\n      \n      setToken(newToken);\n      setUser(usuario);\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(usuario));\n\n      return { success: true, user: usuario };\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = () => {\n    clearAllData();\n  };\n\n  const verifyToken = async () => {\n    if (!token || token.trim() === '' || token === 'null') {\n      console.log('Nenhum token v치lido encontrado - redirecionando para login');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n\n    console.log('Verificando token...');\n    try {\n      const response = await makeRequest('/verify-token');\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Token v치lido - usu치rio autenticado:', data.usuario.email);\n        setUser(data.usuario);\n        localStorage.setItem('user', JSON.stringify(data.usuario));\n      } else {\n        console.log('Token inv치lido - fazendo logout');\n        clearAllData();\n      }\n    } catch (error) {\n      console.error('Erro ao verificar token:', error);\n      clearAllData();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('游댃 Iniciando verifica칞칚o de autentica칞칚o...');\n    \n    // Verificar se h치 dados corrompidos e limpar se necess치rio\n    try {\n      const savedUser = localStorage.getItem('user');\n      const savedToken = localStorage.getItem('token');\n      \n      console.log('游늵 Estado inicial:', { \n        hasUser: !!savedUser, \n        hasToken: !!savedToken,\n        tokenState: !!token \n      });\n\n      // Se h치 dados inconsistentes, limpar tudo\n      if ((savedUser && !savedToken) || (!savedUser && savedToken)) {\n        console.log('丘멆잺 Dados inconsistentes no localStorage - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n      \n      // Se h치 usu치rio salvo mas token 칠 inv치lido\n      if (savedUser && savedToken && (!token || token.trim() === '' || token === 'null')) {\n        console.log('丘멆잺 Token inv치lido mas usu치rio salvo - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n      \n      // Tentar fazer parse do usu치rio se existir\n      if (savedUser) {\n        JSON.parse(savedUser);\n      }\n      \n    } catch (error) {\n      console.log('游눤 Dados corrompidos no localStorage - limpando');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n\n    // Se chegou at칠 aqui, verificar token\n    verifyToken();\n  }, []);\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    makeRequest,\n    isAuthenticated: !!user && !!token,\n    isAdmin: user?.tipo === 'admin',\n    isConsultor: user?.tipo === 'consultor'\n  };\n\n  // Log do estado atual para debug\n  console.log('游댌 AuthContext State:', {\n    hasUser: !!user,\n    hasToken: !!token,\n    loading,\n    isAuthenticated: !!user && !!token,\n    userType: user?.tipo\n  });\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}