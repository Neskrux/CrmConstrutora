{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\InvestMoneyBots\\\\Crm\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(() => {\n    const savedToken = localStorage.getItem('token');\n    // Verificar se o token 칠 v치lido (n칚o vazio e n칚o 'null' string)\n    return savedToken && savedToken !== 'null' && savedToken.trim() !== '' ? savedToken : null;\n  });\n\n  // Configurar URL base da API\n  const API_BASE_URL = process.env.REACT_APP_API_URL || (process.env.NODE_ENV === 'production' ? 'https://seu-backend.vercel.app/api' : 'http://localhost:5000/api');\n  const clearAllData = () => {\n    console.log('Limpando todos os dados de autentica칞칚o');\n    setUser(null);\n    setToken(null);\n    localStorage.clear();\n  };\n  const makeRequest = async (url, options = {}) => {\n    const fullUrl = url.startsWith('http') ? url : `${API_BASE_URL}${url}`;\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(options.headers || {})\n    };\n    if (token) {\n      headers.Authorization = `Bearer ${token}`;\n    }\n    const response = await fetch(fullUrl, {\n      ...options,\n      headers\n    });\n    if (response.status === 401) {\n      // Token expirado ou inv치lido\n      logout();\n      throw new Error('Sess칚o expirada');\n    }\n    return response;\n  };\n  const login = async (email, senha) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          senha\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro no login');\n      }\n      const {\n        token: newToken,\n        usuario\n      } = data;\n      setToken(newToken);\n      setUser(usuario);\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(usuario));\n      return {\n        success: true,\n        user: usuario\n      };\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    clearAllData();\n  };\n  const verifyToken = async () => {\n    if (!token || token.trim() === '' || token === 'null') {\n      console.log('Nenhum token v치lido encontrado - redirecionando para login');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n    console.log('Verificando token...');\n    try {\n      const response = await makeRequest('/verify-token');\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Token v치lido - usu치rio autenticado:', data.usuario.email);\n        setUser(data.usuario);\n        localStorage.setItem('user', JSON.stringify(data.usuario));\n      } else {\n        console.log('Token inv치lido - fazendo logout');\n        clearAllData();\n      }\n    } catch (error) {\n      console.error('Erro ao verificar token:', error);\n      clearAllData();\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    console.log('游댃 Iniciando verifica칞칚o de autentica칞칚o...');\n\n    // Verificar se h치 dados corrompidos e limpar se necess치rio\n    try {\n      const savedUser = localStorage.getItem('user');\n      const savedToken = localStorage.getItem('token');\n      console.log('游늵 Estado inicial:', {\n        hasUser: !!savedUser,\n        hasToken: !!savedToken,\n        tokenState: !!token\n      });\n\n      // Se h치 dados inconsistentes, limpar tudo\n      if (savedUser && !savedToken || !savedUser && savedToken) {\n        console.log('丘멆잺 Dados inconsistentes no localStorage - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n\n      // Se h치 usu치rio salvo mas token 칠 inv치lido\n      if (savedUser && savedToken && (!token || token.trim() === '' || token === 'null')) {\n        console.log('丘멆잺 Token inv치lido mas usu치rio salvo - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n\n      // Tentar fazer parse do usu치rio se existir\n      if (savedUser) {\n        JSON.parse(savedUser);\n      }\n    } catch (error) {\n      console.log('游눤 Dados corrompidos no localStorage - limpando');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n\n    // Se chegou at칠 aqui, verificar token\n    verifyToken();\n  }, []);\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    makeRequest,\n    isAuthenticated: !!user && !!token,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.tipo) === 'admin',\n    isConsultor: (user === null || user === void 0 ? void 0 : user.tipo) === 'consultor'\n  };\n\n  // Log do estado atual para debug\n  console.log('游댌 AuthContext State:', {\n    hasUser: !!user,\n    hasToken: !!token,\n    loading,\n    isAuthenticated: !!user && !!token,\n    userType: user === null || user === void 0 ? void 0 : user.tipo\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Q5D6s5pmlimyYXbQZO8uTlKXWQA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","savedToken","localStorage","getItem","trim","API_BASE_URL","process","env","REACT_APP_API_URL","NODE_ENV","clearAllData","console","log","clear","makeRequest","url","options","fullUrl","startsWith","headers","Authorization","response","fetch","status","logout","login","email","senha","method","body","JSON","stringify","data","json","ok","error","newToken","usuario","setItem","success","message","verifyToken","savedUser","hasUser","hasToken","tokenState","parse","value","isAuthenticated","isAdmin","tipo","isConsultor","userType","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bruno/OneDrive/츼rea de Trabalho/InvestMoneyBots/Crm/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(() => {\n    const savedToken = localStorage.getItem('token');\n    // Verificar se o token 칠 v치lido (n칚o vazio e n칚o 'null' string)\n    return savedToken && savedToken !== 'null' && savedToken.trim() !== '' ? savedToken : null;\n  });\n\n  // Configurar URL base da API\n  const API_BASE_URL = process.env.REACT_APP_API_URL || \n    (process.env.NODE_ENV === 'production' \n      ? 'https://seu-backend.vercel.app/api' \n      : 'http://localhost:5000/api');\n\n  const clearAllData = () => {\n    console.log('Limpando todos os dados de autentica칞칚o');\n    setUser(null);\n    setToken(null);\n    localStorage.clear();\n  };\n\n  const makeRequest = async (url, options = {}) => {\n    const fullUrl = url.startsWith('http') ? url : `${API_BASE_URL}${url}`;\n    \n    const headers = {\n      'Content-Type': 'application/json',\n      ...(options.headers || {})\n    };\n\n    if (token) {\n      headers.Authorization = `Bearer ${token}`;\n    }\n\n    const response = await fetch(fullUrl, {\n      ...options,\n      headers\n    });\n\n    if (response.status === 401) {\n      // Token expirado ou inv치lido\n      logout();\n      throw new Error('Sess칚o expirada');\n    }\n\n    return response;\n  };\n\n  const login = async (email, senha) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, senha })\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro no login');\n      }\n\n      const { token: newToken, usuario } = data;\n      \n      setToken(newToken);\n      setUser(usuario);\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(usuario));\n\n      return { success: true, user: usuario };\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = () => {\n    clearAllData();\n  };\n\n  const verifyToken = async () => {\n    if (!token || token.trim() === '' || token === 'null') {\n      console.log('Nenhum token v치lido encontrado - redirecionando para login');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n\n    console.log('Verificando token...');\n    try {\n      const response = await makeRequest('/verify-token');\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Token v치lido - usu치rio autenticado:', data.usuario.email);\n        setUser(data.usuario);\n        localStorage.setItem('user', JSON.stringify(data.usuario));\n      } else {\n        console.log('Token inv치lido - fazendo logout');\n        clearAllData();\n      }\n    } catch (error) {\n      console.error('Erro ao verificar token:', error);\n      clearAllData();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('游댃 Iniciando verifica칞칚o de autentica칞칚o...');\n    \n    // Verificar se h치 dados corrompidos e limpar se necess치rio\n    try {\n      const savedUser = localStorage.getItem('user');\n      const savedToken = localStorage.getItem('token');\n      \n      console.log('游늵 Estado inicial:', { \n        hasUser: !!savedUser, \n        hasToken: !!savedToken,\n        tokenState: !!token \n      });\n\n      // Se h치 dados inconsistentes, limpar tudo\n      if ((savedUser && !savedToken) || (!savedUser && savedToken)) {\n        console.log('丘멆잺 Dados inconsistentes no localStorage - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n      \n      // Se h치 usu치rio salvo mas token 칠 inv치lido\n      if (savedUser && savedToken && (!token || token.trim() === '' || token === 'null')) {\n        console.log('丘멆잺 Token inv치lido mas usu치rio salvo - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n      \n      // Tentar fazer parse do usu치rio se existir\n      if (savedUser) {\n        JSON.parse(savedUser);\n      }\n      \n    } catch (error) {\n      console.log('游눤 Dados corrompidos no localStorage - limpando');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n\n    // Se chegou at칠 aqui, verificar token\n    verifyToken();\n  }, []);\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    makeRequest,\n    isAuthenticated: !!user && !!token,\n    isAdmin: user?.tipo === 'admin',\n    isConsultor: user?.tipo === 'consultor'\n  };\n\n  // Log do estado atual para debug\n  console.log('游댌 AuthContext State:', {\n    hasUser: !!user,\n    hasToken: !!token,\n    loading,\n    isAuthenticated: !!user && !!token,\n    userType: user?.tipo\n  });\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}