{"ast":null,"code":"import _objectSpread from\"C:/Users/bruno/OneDrive/\\xC1rea de Trabalho/InvestMoneyBots/Crm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Clinicas=()=>{const{makeRequest}=useAuth();const[clinicas,setClinicas]=useState([]);const[showModal,setShowModal]=useState(false);const[editingClinica,setEditingClinica]=useState(null);const[loading,setLoading]=useState(true);const[message,setMessage]=useState('');const[filtroEstado,setFiltroEstado]=useState('');const[filtroCity,setFiltroCity]=useState('');const[formData,setFormData]=useState({nome:'',endereco:'',bairro:'',cidade:'',estado:'',nicho:'',telefone:'',email:''});// Estados brasileiros\nconst estadosBrasileiros=[{sigla:'AC',nome:'Acre'},{sigla:'AL',nome:'Alagoas'},{sigla:'AP',nome:'Amapá'},{sigla:'AM',nome:'Amazonas'},{sigla:'BA',nome:'Bahia'},{sigla:'CE',nome:'Ceará'},{sigla:'DF',nome:'Distrito Federal'},{sigla:'ES',nome:'Espírito Santo'},{sigla:'GO',nome:'Goiás'},{sigla:'MA',nome:'Maranhão'},{sigla:'MT',nome:'Mato Grosso'},{sigla:'MS',nome:'Mato Grosso do Sul'},{sigla:'MG',nome:'Minas Gerais'},{sigla:'PA',nome:'Pará'},{sigla:'PB',nome:'Paraíba'},{sigla:'PR',nome:'Paraná'},{sigla:'PE',nome:'Pernambuco'},{sigla:'PI',nome:'Piauí'},{sigla:'RJ',nome:'Rio de Janeiro'},{sigla:'RN',nome:'Rio Grande do Norte'},{sigla:'RS',nome:'Rio Grande do Sul'},{sigla:'RO',nome:'Rondônia'},{sigla:'RR',nome:'Roraima'},{sigla:'SC',nome:'Santa Catarina'},{sigla:'SP',nome:'São Paulo'},{sigla:'SE',nome:'Sergipe'},{sigla:'TO',nome:'Tocantins'}];// Principais cidades por estado (sample - pode expandir)\nconst cidadesPorEstado={'SP':['São Paulo','Campinas','Santos','São Bernardo do Campo','Santo André','Osasco','Ribeirão Preto','Sorocaba'],'RJ':['Rio de Janeiro','Niterói','Nova Iguaçu','Duque de Caxias','Campos dos Goytacazes','Petrópolis','Volta Redonda'],'MG':['Belo Horizonte','Uberlândia','Contagem','Juiz de Fora','Betim','Montes Claros','Ribeirão das Neves'],'ES':['Vitória','Serra','Vila Velha','Cariacica','Linhares','Cachoeiro de Itapemirim','Colatina'],'PR':['Curitiba','Londrina','Maringá','Ponta Grossa','Cascavel','São José dos Pinhais','Foz do Iguaçu'],'RS':['Porto Alegre','Caxias do Sul','Pelotas','Canoas','Santa Maria','Gravataí','Viamão'],'SC':['Florianópolis','Joinville','Blumenau','São José','Criciúma','Chapecó','Itajaí'],'BA':['Salvador','Feira de Santana','Vitória da Conquista','Camaçari','Juazeiro','Ilhéus','Itabuna'],'GO':['Goiânia','Aparecida de Goiânia','Anápolis','Rio Verde','Luziânia','Águas Lindas de Goiás'],'PE':['Recife','Jaboatão dos Guararapes','Olinda','Caruaru','Petrolina','Paulista','Cabo de Santo Agostinho'],'CE':['Fortaleza','Caucaia','Juazeiro do Norte','Maracanaú','Sobral','Crato','Itapipoca'],'DF':['Brasília','Taguatinga','Ceilândia','Samambaia','Planaltina','Águas Claras','Guará'],'MT':['Cuiabá','Várzea Grande','Rondonópolis','Sinop','Tangará da Serra','Cáceres','Barra do Garças'],'MS':['Campo Grande','Dourados','Três Lagoas','Corumbá','Ponta Porã','Aquidauana','Naviraí'],'AL':['Maceió','Arapiraca','Rio Largo','Palmeira dos Índios','União dos Palmares','Penedo'],'SE':['Aracaju','Nossa Senhora do Socorro','Lagarto','Itabaiana','Estância','Tobias Barreto'],'PB':['João Pessoa','Campina Grande','Santa Rita','Patos','Bayeux','Sousa','Cajazeiras'],'PE':['Recife','Jaboatão dos Guararapes','Olinda','Caruaru','Petrolina','Paulista'],'RN':['Natal','Mossoró','Parnamirim','São Gonçalo do Amarante','Macaíba','Ceará-Mirim'],'PI':['Teresina','Parnaíba','Picos','Piripiri','Floriano','Campo Maior','Barras'],'MA':['São Luís','Imperatriz','São José de Ribamar','Timon','Caxias','Codó','Paço do Lumiar'],'TO':['Palmas','Araguaína','Gurupi','Porto Nacional','Paraíso do Tocantins','Colinas do Tocantins'],'AC':['Rio Branco','Cruzeiro do Sul','Sena Madureira','Tarauacá','Feijó','Brasileia'],'RO':['Porto Velho','Ji-Paraná','Ariquemes','Vilhena','Cacoal','Rolim de Moura'],'RR':['Boa Vista','Rorainópolis','Caracaraí','Alto Alegre','Mucajaí','Cantá'],'AP':['Macapá','Santana','Laranjal do Jari','Oiapoque','Mazagão','Porto Grande'],'AM':['Manaus','Parintins','Itacoatiara','Manacapuru','Coari','Tefé','Tabatinga'],'PA':['Belém','Ananindeua','Santarém','Marabá','Parauapebas','Castanhal','Abaetetuba']};useEffect(()=>{fetchClinicas();},[]);const fetchClinicas=async()=>{try{const response=await makeRequest('/clinicas');const data=await response.json();if(response.ok){setClinicas(data);}else{console.error('Erro ao carregar clínicas:',data.error);setMessage('Erro ao carregar clínicas: '+data.error);}}catch(error){console.error('Erro ao carregar clínicas:',error);setMessage('Erro ao conectar com o servidor');}finally{setLoading(false);}};const handleSubmit=async e=>{e.preventDefault();try{let response;if(editingClinica){response=await makeRequest(\"/clinicas/\".concat(editingClinica.id),{method:'PUT',body:JSON.stringify(formData)});}else{response=await makeRequest('/clinicas',{method:'POST',body:JSON.stringify(formData)});}const data=await response.json();if(response.ok){setMessage(editingClinica?'Clínica atualizada com sucesso!':'Clínica cadastrada com sucesso!');setShowModal(false);setEditingClinica(null);setFormData({nome:'',endereco:'',bairro:'',cidade:'',estado:'',nicho:'',telefone:'',email:''});fetchClinicas();setTimeout(()=>setMessage(''),3000);}else{setMessage('Erro ao salvar clínica: '+data.error);}}catch(error){console.error('Erro ao salvar clínica:',error);setMessage('Erro ao salvar clínica');}};const handleEdit=clinica=>{setEditingClinica(clinica);setFormData({nome:clinica.nome||'',endereco:clinica.endereco||'',bairro:clinica.bairro||'',cidade:clinica.cidade||'',estado:clinica.estado||'',nicho:clinica.nicho||'',telefone:clinica.telefone||'',email:clinica.email||''});setShowModal(true);};const handleInputChange=e=>{const{name,value}=e.target;setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:value}));// Limpar cidade se estado mudar\nif(name==='estado'){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{estado:value,cidade:''// Limpar cidade quando estado muda\n}));}};const formatarData=data=>{return new Date(data).toLocaleDateString('pt-BR');};const formatarTelefone=telefone=>{if(!telefone)return'';const numbers=telefone.replace(/\\D/g,'');if(numbers.length===11){return\"(\".concat(numbers.substring(0,2),\") \").concat(numbers.substring(2,7),\"-\").concat(numbers.substring(7));}return telefone;};const resetForm=()=>{setFormData({nome:'',endereco:'',bairro:'',cidade:'',estado:'',nicho:'',telefone:'',email:''});setEditingClinica(null);setShowModal(false);};// Filtrar clínicas\nconst clinicasFiltradas=clinicas.filter(clinica=>{var _clinica$cidade;const matchEstado=!filtroEstado||clinica.estado===filtroEstado;const matchCidade=!filtroCity||((_clinica$cidade=clinica.cidade)===null||_clinica$cidade===void 0?void 0:_clinica$cidade.toLowerCase().includes(filtroCity.toLowerCase()));return matchEstado&&matchCidade;});// Obter listas únicas para filtros\nconst estadosDisponiveis=[...new Set(clinicas.map(c=>c.estado).filter(estado=>estado&&estado.trim()!==''))].sort();const cidadesDisponiveis=[...new Set(clinicas.filter(c=>!filtroEstado||c.estado===filtroEstado).map(c=>c.cidade).filter(cidade=>cidade&&cidade.trim()!==''))].sort();// Obter cidades sugeridas baseadas no estado selecionado\nconst cidadesSugeridas=formData.estado?cidadesPorEstado[formData.estado]||[]:[];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Cl\\xEDnicas\"}),/*#__PURE__*/_jsx(\"p\",{className:\"page-subtitle\",children:\"Gerencie as cl\\xEDnicas parceiras\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"alert \".concat(message.includes('sucesso')?'alert-success':'alert-error'),children:message}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Lista de Cl\\xEDnicas\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",onClick:()=>setShowModal(true),children:[/*#__PURE__*/_jsx(\"svg\",{width:\"20\",height:\"20\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M12 5v14M5 12h14\"})}),\"Nova Cl\\xEDnica\"]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:'1.5rem',marginBottom:'1.5rem',backgroundColor:'#f9fafb',borderRadius:'8px',border:'1px solid #e5e7eb'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{fontSize:'1.1rem',fontWeight:'600',color:'#1a1d23',margin:0},children:\"Filtros de Busca\"}),(filtroEstado||filtroCity)&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setFiltroEstado('');setFiltroCity('');},className:\"btn btn-secondary\",style:{padding:'0.5rem 1rem',fontSize:'0.9rem'},children:\"Limpar Filtros\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{margin:0},children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Estado\"}),/*#__PURE__*/_jsxs(\"select\",{value:filtroEstado,onChange:e=>{setFiltroEstado(e.target.value);setFiltroCity('');},className:\"form-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Todos os estados\"}),estadosDisponiveis.map(estado=>{const estadoInfo=estadosBrasileiros.find(e=>e.sigla===estado);return/*#__PURE__*/_jsxs(\"option\",{value:estado,children:[estado,\" - \",(estadoInfo===null||estadoInfo===void 0?void 0:estadoInfo.nome)||estado]},estado);})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{margin:0},children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Cidade\"}),/*#__PURE__*/_jsxs(\"select\",{value:filtroCity,onChange:e=>setFiltroCity(e.target.value),className:\"form-select\",disabled:!filtroEstado&&cidadesDisponiveis.length>20,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Todas as cidades\"}),cidadesDisponiveis.slice(0,50).map(cidade=>/*#__PURE__*/_jsx(\"option\",{value:cidade,children:cidade},cidade))]})]})]}),(filtroEstado||filtroCity)&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'1rem',padding:'0.75rem',backgroundColor:'#f3f4f6',borderRadius:'6px',color:'#4b5563',fontSize:'0.9rem'},children:[\"Mostrando \",/*#__PURE__*/_jsx(\"strong\",{children:clinicasFiltradas.length}),\" de \",clinicas.length,\" cl\\xEDnica(s)\"]})]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})}):clinicasFiltradas.length===0?/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',color:'#6b7280',padding:'2rem'},children:filtroEstado||filtroCity?'Nenhuma clínica encontrada com os filtros aplicados.':'Nenhuma clínica cadastrada ainda.'}):/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Nome\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Endere\\xE7o\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Bairro\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Cidade/Estado\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nicho\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Contato\"}),/*#__PURE__*/_jsx(\"th\",{children:\"A\\xE7\\xF5es\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:clinicasFiltradas.map(clinica=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:clinica.nome})}),/*#__PURE__*/_jsx(\"td\",{children:clinica.endereco||'-'}),/*#__PURE__*/_jsx(\"td\",{children:clinica.bairro||'-'}),/*#__PURE__*/_jsx(\"td\",{children:clinica.cidade&&clinica.estado?/*#__PURE__*/_jsxs(\"span\",{children:[clinica.cidade,\"/\",clinica.estado]}):'-'}),/*#__PURE__*/_jsx(\"td\",{children:clinica.nicho?/*#__PURE__*/_jsx(\"span\",{className:\"badge\",style:{backgroundColor:'#e5e7eb',color:'#374151'},children:clinica.nicho}):'-'}),/*#__PURE__*/_jsxs(\"td\",{children:[clinica.telefone&&/*#__PURE__*/_jsx(\"div\",{children:formatarTelefone(clinica.telefone)}),clinica.email&&/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.875rem',color:'#6b7280'},children:clinica.email}),!clinica.telefone&&!clinica.email&&'-']}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEdit(clinica),className:\"btn-action\",title:\"Editar\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"})]})})})]},clinica.id))})]})})]}),showModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",style:{maxWidth:'700px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"modal-title\",children:editingClinica?'Editar Clínica':'Nova Clínica'}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:resetForm,children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,autoComplete:\"off\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Nome da Cl\\xEDnica *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"nome\",className:\"form-input\",value:formData.nome,onChange:handleInputChange,placeholder:\"Digite o nome da cl\\xEDnica\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Endere\\xE7o (Rua e N\\xFAmero)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"endereco\",className:\"form-input\",value:formData.endereco,onChange:handleInputChange,placeholder:\"Ex: Rua das Flores, 123\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Estado *\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"estado\",className:\"form-select\",value:formData.estado,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecione o estado\"}),estadosBrasileiros.map(estado=>/*#__PURE__*/_jsxs(\"option\",{value:estado.sigla,children:[estado.sigla,\" - \",estado.nome]},estado.sigla))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Cidade *\"}),cidadesSugeridas.length>0&&formData.cidade!=='OUTRA'?/*#__PURE__*/_jsxs(\"select\",{name:\"cidade\",className:\"form-select\",value:formData.cidade,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecione a cidade\"}),cidadesSugeridas.map(cidade=>/*#__PURE__*/_jsx(\"option\",{value:cidade,children:cidade},cidade)),/*#__PURE__*/_jsx(\"option\",{value:\"OUTRA\",children:\"Outra cidade\"})]}):/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"cidade\",className:\"form-input\",value:formData.cidade==='OUTRA'?'':formData.cidade,onChange:handleInputChange,placeholder:\"Digite o nome da cidade\",disabled:!formData.estado,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Bairro/Zona\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"bairro\",className:\"form-input\",value:formData.bairro,onChange:handleInputChange,placeholder:\"Ex: Centro, Zona Sul\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Nicho da Cl\\xEDnica *\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"nicho\",className:\"form-select\",value:formData.nicho,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecione o nicho\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Est\\xE9tico\",children:\"Est\\xE9tico\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Odontol\\xF3gico\",children:\"Odontol\\xF3gico\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Ambos\",children:\"Ambos (Est\\xE9tico + Odontol\\xF3gico)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Telefone\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",name:\"telefone\",className:\"form-input\",value:formData.telefone,onChange:handleInputChange,placeholder:\"(11) 99999-9999\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",className:\"form-input\",value:formData.email,onChange:handleInputChange,placeholder:\"contato@clinica.com\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'1rem',justifyContent:'flex-end'},children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:resetForm,children:\"Cancelar\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:editingClinica?'Atualizar Clínica':'Cadastrar Clínica'})]})]})]})})]});};export default Clinicas;","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsx","_jsx","jsxs","_jsxs","Clinicas","makeRequest","clinicas","setClinicas","showModal","setShowModal","editingClinica","setEditingClinica","loading","setLoading","message","setMessage","filtroEstado","setFiltroEstado","filtroCity","setFiltroCity","formData","setFormData","nome","endereco","bairro","cidade","estado","nicho","telefone","email","estadosBrasileiros","sigla","cidadesPorEstado","fetchClinicas","response","data","json","ok","console","error","handleSubmit","e","preventDefault","concat","id","method","body","JSON","stringify","setTimeout","handleEdit","clinica","handleInputChange","name","value","target","_objectSpread","prev","formatarData","Date","toLocaleDateString","formatarTelefone","numbers","replace","length","substring","resetForm","clinicasFiltradas","filter","_clinica$cidade","matchEstado","matchCidade","toLowerCase","includes","estadosDisponiveis","Set","map","c","trim","sort","cidadesDisponiveis","cidadesSugeridas","children","className","onClick","width","height","viewBox","fill","stroke","strokeWidth","d","style","padding","marginBottom","backgroundColor","borderRadius","border","display","justifyContent","alignItems","fontSize","fontWeight","color","margin","onChange","estadoInfo","find","disabled","slice","marginTop","textAlign","title","maxWidth","onSubmit","autoComplete","type","placeholder","required","gap"],"sources":["C:/Users/bruno/OneDrive/Área de Trabalho/InvestMoneyBots/Crm/frontend/src/components/Clinicas.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Clinicas = () => {\n  const { makeRequest } = useAuth();\n  const [clinicas, setClinicas] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editingClinica, setEditingClinica] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState('');\n  const [filtroEstado, setFiltroEstado] = useState('');\n  const [filtroCity, setFiltroCity] = useState('');\n  const [formData, setFormData] = useState({\n    nome: '',\n    endereco: '',\n    bairro: '',\n    cidade: '',\n    estado: '',\n    nicho: '',\n    telefone: '',\n    email: ''\n  });\n\n  // Estados brasileiros\n  const estadosBrasileiros = [\n    { sigla: 'AC', nome: 'Acre' },\n    { sigla: 'AL', nome: 'Alagoas' },\n    { sigla: 'AP', nome: 'Amapá' },\n    { sigla: 'AM', nome: 'Amazonas' },\n    { sigla: 'BA', nome: 'Bahia' },\n    { sigla: 'CE', nome: 'Ceará' },\n    { sigla: 'DF', nome: 'Distrito Federal' },\n    { sigla: 'ES', nome: 'Espírito Santo' },\n    { sigla: 'GO', nome: 'Goiás' },\n    { sigla: 'MA', nome: 'Maranhão' },\n    { sigla: 'MT', nome: 'Mato Grosso' },\n    { sigla: 'MS', nome: 'Mato Grosso do Sul' },\n    { sigla: 'MG', nome: 'Minas Gerais' },\n    { sigla: 'PA', nome: 'Pará' },\n    { sigla: 'PB', nome: 'Paraíba' },\n    { sigla: 'PR', nome: 'Paraná' },\n    { sigla: 'PE', nome: 'Pernambuco' },\n    { sigla: 'PI', nome: 'Piauí' },\n    { sigla: 'RJ', nome: 'Rio de Janeiro' },\n    { sigla: 'RN', nome: 'Rio Grande do Norte' },\n    { sigla: 'RS', nome: 'Rio Grande do Sul' },\n    { sigla: 'RO', nome: 'Rondônia' },\n    { sigla: 'RR', nome: 'Roraima' },\n    { sigla: 'SC', nome: 'Santa Catarina' },\n    { sigla: 'SP', nome: 'São Paulo' },\n    { sigla: 'SE', nome: 'Sergipe' },\n    { sigla: 'TO', nome: 'Tocantins' }\n  ];\n\n  // Principais cidades por estado (sample - pode expandir)\n  const cidadesPorEstado = {\n    'SP': ['São Paulo', 'Campinas', 'Santos', 'São Bernardo do Campo', 'Santo André', 'Osasco', 'Ribeirão Preto', 'Sorocaba'],\n    'RJ': ['Rio de Janeiro', 'Niterói', 'Nova Iguaçu', 'Duque de Caxias', 'Campos dos Goytacazes', 'Petrópolis', 'Volta Redonda'],\n    'MG': ['Belo Horizonte', 'Uberlândia', 'Contagem', 'Juiz de Fora', 'Betim', 'Montes Claros', 'Ribeirão das Neves'],\n    'ES': ['Vitória', 'Serra', 'Vila Velha', 'Cariacica', 'Linhares', 'Cachoeiro de Itapemirim', 'Colatina'],\n    'PR': ['Curitiba', 'Londrina', 'Maringá', 'Ponta Grossa', 'Cascavel', 'São José dos Pinhais', 'Foz do Iguaçu'],\n    'RS': ['Porto Alegre', 'Caxias do Sul', 'Pelotas', 'Canoas', 'Santa Maria', 'Gravataí', 'Viamão'],\n    'SC': ['Florianópolis', 'Joinville', 'Blumenau', 'São José', 'Criciúma', 'Chapecó', 'Itajaí'],\n    'BA': ['Salvador', 'Feira de Santana', 'Vitória da Conquista', 'Camaçari', 'Juazeiro', 'Ilhéus', 'Itabuna'],\n    'GO': ['Goiânia', 'Aparecida de Goiânia', 'Anápolis', 'Rio Verde', 'Luziânia', 'Águas Lindas de Goiás'],\n    'PE': ['Recife', 'Jaboatão dos Guararapes', 'Olinda', 'Caruaru', 'Petrolina', 'Paulista', 'Cabo de Santo Agostinho'],\n    'CE': ['Fortaleza', 'Caucaia', 'Juazeiro do Norte', 'Maracanaú', 'Sobral', 'Crato', 'Itapipoca'],\n    'DF': ['Brasília', 'Taguatinga', 'Ceilândia', 'Samambaia', 'Planaltina', 'Águas Claras', 'Guará'],\n    'MT': ['Cuiabá', 'Várzea Grande', 'Rondonópolis', 'Sinop', 'Tangará da Serra', 'Cáceres', 'Barra do Garças'],\n    'MS': ['Campo Grande', 'Dourados', 'Três Lagoas', 'Corumbá', 'Ponta Porã', 'Aquidauana', 'Naviraí'],\n    'AL': ['Maceió', 'Arapiraca', 'Rio Largo', 'Palmeira dos Índios', 'União dos Palmares', 'Penedo'],\n    'SE': ['Aracaju', 'Nossa Senhora do Socorro', 'Lagarto', 'Itabaiana', 'Estância', 'Tobias Barreto'],\n    'PB': ['João Pessoa', 'Campina Grande', 'Santa Rita', 'Patos', 'Bayeux', 'Sousa', 'Cajazeiras'],\n    'PE': ['Recife', 'Jaboatão dos Guararapes', 'Olinda', 'Caruaru', 'Petrolina', 'Paulista'],\n    'RN': ['Natal', 'Mossoró', 'Parnamirim', 'São Gonçalo do Amarante', 'Macaíba', 'Ceará-Mirim'],\n    'PI': ['Teresina', 'Parnaíba', 'Picos', 'Piripiri', 'Floriano', 'Campo Maior', 'Barras'],\n    'MA': ['São Luís', 'Imperatriz', 'São José de Ribamar', 'Timon', 'Caxias', 'Codó', 'Paço do Lumiar'],\n    'TO': ['Palmas', 'Araguaína', 'Gurupi', 'Porto Nacional', 'Paraíso do Tocantins', 'Colinas do Tocantins'],\n    'AC': ['Rio Branco', 'Cruzeiro do Sul', 'Sena Madureira', 'Tarauacá', 'Feijó', 'Brasileia'],\n    'RO': ['Porto Velho', 'Ji-Paraná', 'Ariquemes', 'Vilhena', 'Cacoal', 'Rolim de Moura'],\n    'RR': ['Boa Vista', 'Rorainópolis', 'Caracaraí', 'Alto Alegre', 'Mucajaí', 'Cantá'],\n    'AP': ['Macapá', 'Santana', 'Laranjal do Jari', 'Oiapoque', 'Mazagão', 'Porto Grande'],\n    'AM': ['Manaus', 'Parintins', 'Itacoatiara', 'Manacapuru', 'Coari', 'Tefé', 'Tabatinga'],\n    'PA': ['Belém', 'Ananindeua', 'Santarém', 'Marabá', 'Parauapebas', 'Castanhal', 'Abaetetuba']\n  };\n\n  useEffect(() => {\n    fetchClinicas();\n  }, []);\n\n  const fetchClinicas = async () => {\n    try {\n      const response = await makeRequest('/clinicas');\n      const data = await response.json();\n      \n      if (response.ok) {\n        setClinicas(data);\n      } else {\n        console.error('Erro ao carregar clínicas:', data.error);\n        setMessage('Erro ao carregar clínicas: ' + data.error);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar clínicas:', error);\n      setMessage('Erro ao conectar com o servidor');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let response;\n      if (editingClinica) {\n        response = await makeRequest(`/clinicas/${editingClinica.id}`, {\n          method: 'PUT',\n          body: JSON.stringify(formData)\n        });\n      } else {\n        response = await makeRequest('/clinicas', {\n          method: 'POST',\n          body: JSON.stringify(formData)\n        });\n      }\n\n      const data = await response.json();\n      \n      if (response.ok) {\n        setMessage(editingClinica ? 'Clínica atualizada com sucesso!' : 'Clínica cadastrada com sucesso!');\n        setShowModal(false);\n        setEditingClinica(null);\n        setFormData({\n          nome: '',\n          endereco: '',\n          bairro: '',\n          cidade: '',\n          estado: '',\n          nicho: '',\n          telefone: '',\n          email: ''\n        });\n        fetchClinicas();\n        setTimeout(() => setMessage(''), 3000);\n      } else {\n        setMessage('Erro ao salvar clínica: ' + data.error);\n      }\n    } catch (error) {\n      console.error('Erro ao salvar clínica:', error);\n      setMessage('Erro ao salvar clínica');\n    }\n  };\n\n  const handleEdit = (clinica) => {\n    setEditingClinica(clinica);\n    setFormData({\n      nome: clinica.nome || '',\n      endereco: clinica.endereco || '',\n      bairro: clinica.bairro || '',\n      cidade: clinica.cidade || '',\n      estado: clinica.estado || '',\n      nicho: clinica.nicho || '',\n      telefone: clinica.telefone || '',\n      email: clinica.email || ''\n    });\n    setShowModal(true);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Limpar cidade se estado mudar\n    if (name === 'estado') {\n      setFormData(prev => ({\n        ...prev,\n        estado: value,\n        cidade: '' // Limpar cidade quando estado muda\n      }));\n    }\n  };\n\n  const formatarData = (data) => {\n    return new Date(data).toLocaleDateString('pt-BR');\n  };\n\n  const formatarTelefone = (telefone) => {\n    if (!telefone) return '';\n    const numbers = telefone.replace(/\\D/g, '');\n    if (numbers.length === 11) {\n      return `(${numbers.substring(0, 2)}) ${numbers.substring(2, 7)}-${numbers.substring(7)}`;\n    }\n    return telefone;\n  };\n\n  const resetForm = () => {\n    setFormData({\n      nome: '',\n      endereco: '',\n      bairro: '',\n      cidade: '',\n      estado: '',\n      nicho: '',\n      telefone: '',\n      email: ''\n    });\n    setEditingClinica(null);\n    setShowModal(false);\n  };\n\n  // Filtrar clínicas\n  const clinicasFiltradas = clinicas.filter(clinica => {\n    const matchEstado = !filtroEstado || clinica.estado === filtroEstado;\n    const matchCidade = !filtroCity || clinica.cidade?.toLowerCase().includes(filtroCity.toLowerCase());\n    return matchEstado && matchCidade;\n  });\n\n  // Obter listas únicas para filtros\n  const estadosDisponiveis = [...new Set(clinicas\n    .map(c => c.estado)\n    .filter(estado => estado && estado.trim() !== '')\n  )].sort();\n\n  const cidadesDisponiveis = [...new Set(clinicas\n    .filter(c => !filtroEstado || c.estado === filtroEstado)\n    .map(c => c.cidade)\n    .filter(cidade => cidade && cidade.trim() !== '')\n  )].sort();\n\n  // Obter cidades sugeridas baseadas no estado selecionado\n  const cidadesSugeridas = formData.estado ? (cidadesPorEstado[formData.estado] || []) : [];\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h1 className=\"page-title\">Clínicas</h1>\n        <p className=\"page-subtitle\">Gerencie as clínicas parceiras</p>\n      </div>\n\n      {message && (\n        <div className={`alert ${message.includes('sucesso') ? 'alert-success' : 'alert-error'}`}>\n          {message}\n        </div>\n      )}\n\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">Lista de Clínicas</h2>\n          <button \n            className=\"btn btn-primary\"\n            onClick={() => setShowModal(true)}\n          >\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M12 5v14M5 12h14\" />\n            </svg>\n            Nova Clínica\n          </button>\n        </div>\n\n        {/* Seção de Filtros */}\n        <div style={{ \n          padding: '1.5rem', \n          marginBottom: '1.5rem',\n          backgroundColor: '#f9fafb',\n          borderRadius: '8px',\n          border: '1px solid #e5e7eb'\n        }}>\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center', \n            marginBottom: '1rem' \n          }}>\n            <h3 style={{ \n              fontSize: '1.1rem', \n              fontWeight: '600', \n              color: '#1a1d23', \n              margin: 0\n            }}>\n              Filtros de Busca\n            </h3>\n            {(filtroEstado || filtroCity) && (\n              <button \n                onClick={() => {\n                  setFiltroEstado('');\n                  setFiltroCity('');\n                }}\n                className=\"btn btn-secondary\"\n                style={{ padding: '0.5rem 1rem', fontSize: '0.9rem' }}\n              >\n                Limpar Filtros\n              </button>\n            )}\n          </div>\n          \n          <div className=\"grid grid-2\">\n            <div className=\"form-group\" style={{ margin: 0 }}>\n              <label className=\"form-label\">Estado</label>\n              <select\n                value={filtroEstado}\n                onChange={(e) => {\n                  setFiltroEstado(e.target.value);\n                  setFiltroCity('');\n                }}\n                className=\"form-select\"\n              >\n                <option value=\"\">Todos os estados</option>\n                {estadosDisponiveis.map(estado => {\n                  const estadoInfo = estadosBrasileiros.find(e => e.sigla === estado);\n                  return (\n                    <option key={estado} value={estado}>\n                      {estado} - {estadoInfo?.nome || estado}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n\n            <div className=\"form-group\" style={{ margin: 0 }}>\n              <label className=\"form-label\">Cidade</label>\n              <select\n                value={filtroCity}\n                onChange={(e) => setFiltroCity(e.target.value)}\n                className=\"form-select\"\n                disabled={!filtroEstado && cidadesDisponiveis.length > 20}\n              >\n                <option value=\"\">Todas as cidades</option>\n                {cidadesDisponiveis.slice(0, 50).map(cidade => (\n                  <option key={cidade} value={cidade}>{cidade}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {(filtroEstado || filtroCity) && (\n            <div style={{ \n              marginTop: '1rem', \n              padding: '0.75rem', \n              backgroundColor: '#f3f4f6', \n              borderRadius: '6px',\n              color: '#4b5563',\n              fontSize: '0.9rem'\n            }}>\n              Mostrando <strong>{clinicasFiltradas.length}</strong> de {clinicas.length} clínica(s)\n            </div>\n          )}\n        </div>\n\n        {loading ? (\n          <div className=\"loading\">\n            <div className=\"spinner\"></div>\n          </div>\n        ) : clinicasFiltradas.length === 0 ? (\n          <p style={{ textAlign: 'center', color: '#6b7280', padding: '2rem' }}>\n            {filtroEstado || filtroCity\n              ? 'Nenhuma clínica encontrada com os filtros aplicados.'\n              : 'Nenhuma clínica cadastrada ainda.'\n            }\n          </p>\n        ) : (\n          <div className=\"table-container\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Nome</th>\n                  <th>Endereço</th>\n                  <th>Bairro</th>\n                  <th>Cidade/Estado</th>\n                  <th>Nicho</th>\n                  <th>Contato</th>\n                  <th>Ações</th>\n                </tr>\n              </thead>\n              <tbody>\n                {clinicasFiltradas.map(clinica => (\n                  <tr key={clinica.id}>\n                    <td>\n                      <strong>{clinica.nome}</strong>\n                    </td>\n                    <td>{clinica.endereco || '-'}</td>\n                    <td>{clinica.bairro || '-'}</td>\n                    <td>\n                      {clinica.cidade && clinica.estado ? (\n                        <span>{clinica.cidade}/{clinica.estado}</span>\n                      ) : '-'}\n                    </td>\n                    <td>\n                      {clinica.nicho ? (\n                        <span className=\"badge\" style={{ backgroundColor: '#e5e7eb', color: '#374151' }}>\n                          {clinica.nicho}\n                        </span>\n                      ) : '-'}\n                    </td>\n                    <td>\n                      {clinica.telefone && (\n                        <div>{formatarTelefone(clinica.telefone)}</div>\n                      )}\n                      {clinica.email && (\n                        <div style={{ fontSize: '0.875rem', color: '#6b7280' }}>{clinica.email}</div>\n                      )}\n                      {!clinica.telefone && !clinica.email && '-'}\n                    </td>\n                    <td>\n                      <button\n                        onClick={() => handleEdit(clinica)}\n                        className=\"btn-action\"\n                        title=\"Editar\"\n                      >\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                          <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" />\n                          <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" />\n                        </svg>\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {/* Modal de Cadastro/Edição */}\n      {showModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\" style={{ maxWidth: '700px' }}>\n            <div className=\"modal-header\">\n              <h2 className=\"modal-title\">\n                {editingClinica ? 'Editar Clínica' : 'Nova Clínica'}\n              </h2>\n              <button \n                className=\"close-btn\"\n                onClick={resetForm}\n              >\n                ×\n              </button>\n            </div>\n\n            <form onSubmit={handleSubmit} autoComplete=\"off\">\n              <div className=\"form-group\">\n                <label className=\"form-label\">Nome da Clínica *</label>\n                <input\n                  type=\"text\"\n                  name=\"nome\"\n                  className=\"form-input\"\n                  value={formData.nome}\n                  onChange={handleInputChange}\n                  placeholder=\"Digite o nome da clínica\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">Endereço (Rua e Número)</label>\n                <input\n                  type=\"text\"\n                  name=\"endereco\"\n                  className=\"form-input\"\n                  value={formData.endereco}\n                  onChange={handleInputChange}\n                  placeholder=\"Ex: Rua das Flores, 123\"\n                />\n              </div>\n\n              <div className=\"grid grid-3\">\n                <div className=\"form-group\">\n                  <label className=\"form-label\">Estado *</label>\n                  <select\n                    name=\"estado\"\n                    className=\"form-select\"\n                    value={formData.estado}\n                    onChange={handleInputChange}\n                    required\n                  >\n                    <option value=\"\">Selecione o estado</option>\n                    {estadosBrasileiros.map(estado => (\n                      <option key={estado.sigla} value={estado.sigla}>\n                        {estado.sigla} - {estado.nome}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label className=\"form-label\">Cidade *</label>\n                  {cidadesSugeridas.length > 0 && formData.cidade !== 'OUTRA' ? (\n                    <select\n                      name=\"cidade\"\n                      className=\"form-select\"\n                      value={formData.cidade}\n                      onChange={handleInputChange}\n                      required\n                    >\n                      <option value=\"\">Selecione a cidade</option>\n                      {cidadesSugeridas.map(cidade => (\n                        <option key={cidade} value={cidade}>{cidade}</option>\n                      ))}\n                      <option value=\"OUTRA\">Outra cidade</option>\n                    </select>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      name=\"cidade\"\n                      className=\"form-input\"\n                      value={formData.cidade === 'OUTRA' ? '' : formData.cidade}\n                      onChange={handleInputChange}\n                      placeholder=\"Digite o nome da cidade\"\n                      disabled={!formData.estado}\n                      required\n                    />\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <label className=\"form-label\">Bairro/Zona</label>\n                  <input\n                    type=\"text\"\n                    name=\"bairro\"\n                    className=\"form-input\"\n                    value={formData.bairro}\n                    onChange={handleInputChange}\n                    placeholder=\"Ex: Centro, Zona Sul\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-label\">Nicho da Clínica *</label>\n                <select\n                  name=\"nicho\"\n                  className=\"form-select\"\n                  value={formData.nicho}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"\">Selecione o nicho</option>\n                  <option value=\"Estético\">Estético</option>\n                  <option value=\"Odontológico\">Odontológico</option>\n                  <option value=\"Ambos\">Ambos (Estético + Odontológico)</option>\n                </select>\n              </div>\n\n              <div className=\"grid grid-2\">\n                <div className=\"form-group\">\n                  <label className=\"form-label\">Telefone</label>\n                  <input\n                    type=\"tel\"\n                    name=\"telefone\"\n                    className=\"form-input\"\n                    value={formData.telefone}\n                    onChange={handleInputChange}\n                    placeholder=\"(11) 99999-9999\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    className=\"form-input\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    placeholder=\"contato@clinica.com\"\n                  />\n                </div>\n              </div>\n\n              <div style={{ display: 'flex', gap: '1rem', justifyContent: 'flex-end' }}>\n                <button \n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={resetForm}\n                >\n                  Cancelar\n                </button>\n                <button \n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                >\n                  {editingClinica ? 'Atualizar Clínica' : 'Cadastrar Clínica'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Clinicas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}