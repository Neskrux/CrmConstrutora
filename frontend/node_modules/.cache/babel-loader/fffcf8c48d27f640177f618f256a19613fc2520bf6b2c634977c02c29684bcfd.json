{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Downloads\\\\Crm\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(() => {\n    const savedToken = localStorage.getItem('token');\n    // Verificar se o token é válido (não vazio e não 'null' string)\n    return savedToken && savedToken !== 'null' && savedToken.trim() !== '' ? savedToken : null;\n  });\n\n  // Configurar URL base da API\n  const API_BASE_URL = process.env.REACT_APP_API_URL || (process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:5000/api');\n  const clearAllData = () => {\n    console.log('Limpando todos os dados de autenticação');\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const makeRequest = async (url, options = {}) => {\n    const fullUrl = url.startsWith('http') ? url : `${API_BASE_URL}${url}`;\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(options.headers || {})\n    };\n\n    // Sempre buscar o token atual do localStorage\n    const currentToken = localStorage.getItem('token');\n    if (currentToken && currentToken !== 'null' && currentToken.trim() !== '') {\n      headers.Authorization = `Bearer ${currentToken}`;\n    }\n    const response = await fetch(fullUrl, {\n      ...options,\n      headers\n    });\n    if (response.status === 401) {\n      // Token expirado ou inválido\n      logout();\n      throw new Error('Sessão expirada');\n    }\n    return response;\n  };\n  const login = async (email, senha) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          senha\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro no login');\n      }\n      const {\n        token: newToken,\n        usuario\n      } = data;\n\n      // Salvar token no localStorage e no state\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(usuario));\n      setToken(newToken);\n      setUser(usuario);\n      console.log('✅ Login realizado com sucesso:', {\n        usuario: usuario.nome,\n        token: newToken ? 'presente' : 'ausente'\n      });\n      return {\n        success: true,\n        user: usuario\n      };\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    clearAllData();\n  };\n  const verifyToken = async () => {\n    const currentToken = localStorage.getItem('token');\n    if (!currentToken || currentToken === 'null' || currentToken.trim() === '') {\n      console.log('Nenhum token válido encontrado - redirecionando para login');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n    console.log('Verificando token...');\n    try {\n      const response = await makeRequest('/verify-token');\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Token válido - usuário autenticado:', data.usuario.nome || data.usuario.email);\n        setUser(data.usuario);\n        setToken(currentToken);\n        localStorage.setItem('user', JSON.stringify(data.usuario));\n      } else {\n        console.log('Token inválido - fazendo logout');\n        clearAllData();\n      }\n    } catch (error) {\n      console.error('Erro ao verificar token:', error);\n      clearAllData();\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    console.log('🔄 Iniciando verificação de autenticação...');\n\n    // Verificar se há dados corrompidos e limpar se necessário\n    try {\n      const savedUser = localStorage.getItem('user');\n      const savedToken = localStorage.getItem('token');\n      console.log('📊 Estado inicial:', {\n        hasUser: !!savedUser,\n        hasToken: !!savedToken,\n        tokenState: !!token\n      });\n\n      // Se há dados inconsistentes, limpar tudo\n      if (savedUser && !savedToken || !savedUser && savedToken) {\n        console.log('⚠️ Dados inconsistentes no localStorage - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n\n      // Se há usuário salvo mas token é inválido\n      if (savedUser && savedToken && (!token || token.trim() === '' || token === 'null')) {\n        console.log('⚠️ Token inválido mas usuário salvo - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n\n      // Tentar fazer parse do usuário se existir\n      if (savedUser) {\n        JSON.parse(savedUser);\n      }\n    } catch (error) {\n      console.log('💥 Dados corrompidos no localStorage - limpando');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n\n    // Se chegou até aqui, verificar token\n    verifyToken();\n  }, []);\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    makeRequest,\n    isAuthenticated: !!user && !!token,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.tipo) === 'admin',\n    isConsultor: (user === null || user === void 0 ? void 0 : user.tipo) === 'consultor'\n  };\n\n  // Log do estado atual para debug\n  console.log('🔍 AuthContext State:', {\n    hasUser: !!user,\n    hasToken: !!token,\n    loading,\n    isAuthenticated: !!user && !!token,\n    userType: user === null || user === void 0 ? void 0 : user.tipo\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Q5D6s5pmlimyYXbQZO8uTlKXWQA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","savedToken","localStorage","getItem","trim","API_BASE_URL","process","env","REACT_APP_API_URL","NODE_ENV","clearAllData","console","log","removeItem","makeRequest","url","options","fullUrl","startsWith","headers","currentToken","Authorization","response","fetch","status","logout","login","email","senha","method","body","JSON","stringify","data","json","ok","error","newToken","usuario","setItem","nome","success","message","verifyToken","savedUser","hasUser","hasToken","tokenState","parse","value","isAuthenticated","isAdmin","tipo","isConsultor","userType","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bruno/Downloads/Crm/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(() => {\n    const savedToken = localStorage.getItem('token');\n    // Verificar se o token é válido (não vazio e não 'null' string)\n    return savedToken && savedToken !== 'null' && savedToken.trim() !== '' ? savedToken : null;\n  });\n\n  // Configurar URL base da API\n  const API_BASE_URL = process.env.REACT_APP_API_URL || \n    (process.env.NODE_ENV === 'production' \n      ? '/api' \n      : 'http://localhost:5000/api');\n\n  const clearAllData = () => {\n    console.log('Limpando todos os dados de autenticação');\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n\n  const makeRequest = async (url, options = {}) => {\n    const fullUrl = url.startsWith('http') ? url : `${API_BASE_URL}${url}`;\n    \n    const headers = {\n      'Content-Type': 'application/json',\n      ...(options.headers || {})\n    };\n\n    // Sempre buscar o token atual do localStorage\n    const currentToken = localStorage.getItem('token');\n    if (currentToken && currentToken !== 'null' && currentToken.trim() !== '') {\n      headers.Authorization = `Bearer ${currentToken}`;\n    }\n\n    const response = await fetch(fullUrl, {\n      ...options,\n      headers\n    });\n\n    if (response.status === 401) {\n      // Token expirado ou inválido\n      logout();\n      throw new Error('Sessão expirada');\n    }\n\n    return response;\n  };\n\n  const login = async (email, senha) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, senha })\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro no login');\n      }\n\n      const { token: newToken, usuario } = data;\n      \n      // Salvar token no localStorage e no state\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(usuario));\n      setToken(newToken);\n      setUser(usuario);\n\n      console.log('✅ Login realizado com sucesso:', { usuario: usuario.nome, token: newToken ? 'presente' : 'ausente' });\n\n      return { success: true, user: usuario };\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = () => {\n    clearAllData();\n  };\n\n  const verifyToken = async () => {\n    const currentToken = localStorage.getItem('token');\n    \n    if (!currentToken || currentToken === 'null' || currentToken.trim() === '') {\n      console.log('Nenhum token válido encontrado - redirecionando para login');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n\n    console.log('Verificando token...');\n    try {\n      const response = await makeRequest('/verify-token');\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Token válido - usuário autenticado:', data.usuario.nome || data.usuario.email);\n        setUser(data.usuario);\n        setToken(currentToken);\n        localStorage.setItem('user', JSON.stringify(data.usuario));\n      } else {\n        console.log('Token inválido - fazendo logout');\n        clearAllData();\n      }\n    } catch (error) {\n      console.error('Erro ao verificar token:', error);\n      clearAllData();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('🔄 Iniciando verificação de autenticação...');\n    \n    // Verificar se há dados corrompidos e limpar se necessário\n    try {\n      const savedUser = localStorage.getItem('user');\n      const savedToken = localStorage.getItem('token');\n      \n      console.log('📊 Estado inicial:', { \n        hasUser: !!savedUser, \n        hasToken: !!savedToken,\n        tokenState: !!token \n      });\n\n      // Se há dados inconsistentes, limpar tudo\n      if ((savedUser && !savedToken) || (!savedUser && savedToken)) {\n        console.log('⚠️ Dados inconsistentes no localStorage - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n      \n      // Se há usuário salvo mas token é inválido\n      if (savedUser && savedToken && (!token || token.trim() === '' || token === 'null')) {\n        console.log('⚠️ Token inválido mas usuário salvo - limpando');\n        clearAllData();\n        setLoading(false);\n        return;\n      }\n      \n      // Tentar fazer parse do usuário se existir\n      if (savedUser) {\n        JSON.parse(savedUser);\n      }\n      \n    } catch (error) {\n      console.log('💥 Dados corrompidos no localStorage - limpando');\n      clearAllData();\n      setLoading(false);\n      return;\n    }\n\n    // Se chegou até aqui, verificar token\n    verifyToken();\n  }, []);\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    makeRequest,\n    isAuthenticated: !!user && !!token,\n    isAdmin: user?.tipo === 'admin',\n    isConsultor: user?.tipo === 'consultor'\n  };\n\n  // Log do estado atual para debug\n  console.log('🔍 AuthContext State:', {\n    hasUser: !!user,\n    hasToken: !!token,\n    loading,\n    isAuthenticated: !!user && !!token,\n    userType: user?.tipo\n  });\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}